{"version":3,"sources":["hooks/UseLocalStorage.js","api/APIAuthentication.js","api/APIStatusRecord.js","context/AuthContext.js","components/Screen/Screen.js","components/Screen/Mobile.js","api/APIPassword.js","components/ForgotPasswordModal.js","pages/Login.js","constants/AuthorizationConstants.js","image/googlecalendar.png","components/SideDrawer/SideDrawerScreen.js","components/SideDrawer/SideDrawerMobile.js","api/APIUsers.js","components/SideDrawer/SideDrawer.js","components/Navbar.js","constants/CalendarConstants.js","api/APIScreenCalendar.js","components/Calendar/Calendar.js","components/User/Modals/ChangePasswordModal.js","components/User/ViewYourProfile.js","components/Search.js","helpers/ExportToPDF.js","components/User/UsersTable.js","api/APIRoles.js","components/User/CreateUserForm.js","api/APIEmployeeStatus.js","components/User/ViewProfile.js","components/User/ViewProfileSallary.js","components/User/Modals/RefreshPasswordModal.js","components/User/EditUserForm.js","components/User/EditUserFormSallary.js","components/UsersWorkingHours/Modals/EditUsersWorkingHoursModal.js","components/UsersWorkingHours/UsersWorkingHoursTable.js","components/UsersWorkingHours/WorkingHoursReport.js","components/UsersWorkingHours/UserWorkingHoursReport.js","api/APISallary.js","components/Sallary/Sallary.js","components/Sallary/SallaryReport.js","components/Sallary/UserSallaryReport.js","components/UserCkeckIn/UserCheckInForm.js","constants/EmployeeStatusRecordConstants.js","components/OtherStatus/OtherStatus.js","components/EmployeeStatus/EmployeeStatusForm.js","components/EmployeeStatus/Modals/DeleteEmployeeStatusModal.js","components/EmployeeStatus/EmployeeStatusTable.js","components/EmployeeStatus/EditEmployeeStatus.js","helpers/AccessRoute.js","pages/Main.js","App.js","index.js"],"names":["useLocalStorage","storageKey","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","returnInitialState","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","getLogOut","a","axios","delete","isLoggedIn","get","getUserRole","getLogIn","email","password","post","checkIn","user","isCheckIn","getStatusInCurrentMonth","month","year","setHolidays","dateFrom","dateTo","vacationDayLeft","setOtherStatus","status","getHolidayDayLeft","getWorkingReport","_id","getWholeWorkingReport","getWorkingReportForAllUsers","getWholeWorkingReportForAllUsers","AuthContext","createContext","AuthContextProvider","props","isSubscribed","useRef","authKey1","loggedIn","setLoggedIn","authKey2","authorization","setAuthorization","flagCheckIn","setFlagCheckIn","getLoggedIn","useCallback","then","loggedInRes","data","getAuthorization","response","getIsCheckIn","useEffect","current","Provider","children","Screen","Box","sx","paddingTop","open","marginLeft","Typography","variant","page","marginRight","marginTop","marginBottom","Paper","elevation","width","padding","borderRadius","Mobile","resetPassword","id","put","changePassword","forgotPassword","ForgotPasswordModal","setEmail","handleSubmit","event","preventDefault","handleCloseModal","Dialog","openModal","onClose","DialogTitle","DialogContent","DialogContentText","TextField","onChange","e","target","autoFocus","margin","label","type","fullWidth","DialogActions","Button","onClick","boxForm","position","xs","sm","md","lg","xl","left","right","backgroundColor","Login","useContext","setPassword","message","setMessage","validation","setValidation","resetPasswordMessage","setResetPasswordMessage","undefined","success","setSuccess","setOpenModal","openAlert","setOpenAlert","handleCloseAlert","reason","setIsLogOut","Container","disableGutters","maxWidth","bgcolor","height","display","flexDirection","alignItems","color","fontSize","component","noValidate","autoComplete","onSubmit","Stack","spacing","Snackbar","autoHideDuration","Alert","severity","isLogOut","to","ROLES","Object","freeze","ADMINISTRATOR","ACCOUNTANT","EMPLOYEE","openedMixin","theme","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","breakpoints","up","DrawerHeader","styled","mixins","toolbar","LeftDrawer","Drawer","shouldForwardProp","prop","flexShrink","whiteSpace","boxSizing","SideDrawerScreen","style","textDecoration","ListItem","button","ListItemIcon","Avatar","src","googlecalendar","ListItemText","primary","Divider","blue","name","at","List","ListSubheader","paddingLeft","SideDrawerMobile","toggleDrawer","key","setOpen","role","onKeyDown","getAllUsers","createUser","getUserData","params","userId","getYourProfileData","changeUser","changeUserSallary","getAllUsersWorkingHours","changeUserWorkingHours","workingHour","getYourWorkingHours","SideDrawer","useTheme","matches","useMediaQuery","down","setName","firstName","lastName","CssBaseline","StyledBox","Navbar","anchorRef","logOut","callBack","handleClose","contains","handleListKeyDown","prevOpen","focus","renderMobileMenu","Popper","zIndex","anchorEl","placement","disablePortal","TransitionProps","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","MenuItem","IconButton","size","flexGrow","AppBar","Toolbar","ml","toggleSideDrawer","Chip","ref","DAYS","getNextMonth","nextMonth","nextYear","getPreviousMonth","previousMonth","previousYear","getDaysInCurrentMonth","ScreenCalendar","today","setToday","setMonth","monthName","setMonthName","setYear","daysInMonth","setDaysInMonth","setStatus","handleNext","calendar","nextMonthName","daysInNextMonth","handlePrevious","previousMonthName","daysInPreviousMonth","currentDay","currentMonthName","currentYear","daysInCurrentMonth","className","toString","concat","map","day","index","week","indexRow","Date","getMonth","getFullYear","indexCell","dayStatusIndex","findIndex","filterStatus","length","ChangePasswordModal","oldPassword","setOldPassword","newPassword","setNewPssword","confirmPassword","setConfirmPassword","messageOldPassword","messageNewPassword","messageConfirmPassword","errorMessage","setErrorMessage","errorOldPassword","errorNewPassword","errorConfirmPassword","errorBool","setErrorBool","focused","helperText","direction","ViewYourProfile","firstLetter","setFirstLetter","jmbg","address","hourlyWage","personalDeductions","vacation","setUser","changePasswordMessage","setChangePasswordMessage","charAt","Card","CardHeader","avatar","title","subheader","CardContent","paddingBottom","disabled","CardActions","Search","FormControl","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","search","edge","cancelSearch","searchVal","searchedVal","requestSearch","exportPDF","tableName","allUsers","tableHeaders","userJSON","doc","jsPDF","AmiriRegular","addFileToVFS","encode","addFont","setFont","setFontSize","headers","i","content","startY","head","body","headStyles","font","bodyStyles","text","autoTable","save","UsersTable","setAllUsers","setSearch","searchUsers","setSearchUsers","setTableHeaders","setUserJSON","setPage","rowLength","setRowLength","rowsPerPage","setRowsPerPage","usersNames","pl","pr","flex","Tooltip","filteredUsers","filter","userName","toLowerCase","includes","TableContainer","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","slice","row","hover","justifyContent","startIcon","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPageOptions","labelRowsPerPage","labelDisplayedRows","getRoles","CreateUserForm","roleName","roles","setRoles","isCreated","setIsCreated","firstNameBool","lastNameBool","jmbgBool","addressBool","emailBool","positionBool","personalDeductionsBool","hourlyWageBool","vacationBool","bool","setBool","firstNameError","lastNameError","jmbgError","addressError","emailError","positionError","personalDeductionsError","hourlyWageError","vacationError","messages","setMessages","updateField","paddingRight","select","inputProps","min","step","getEmployeeStatus","getStatusWithId","statusId","createEmployeeStatus","employeeStatus","editEmployeeStatus","deleteEmployeeStatus","ViewProfile","useParams","setEmployeeStatus","gridTemplateRows","disableSpacing","textAlign","stickyHeader","colSpan","dateStatusChange","toLocaleDateString","ViewProfileSallary","RefreshPasswordModal","EditUserForm","isEdit","setIsEdit","userData","EditUserFormSallary","EditUsersWorkingHoursModal","workingHourFrom","setWorkingHourFrom","workingHourTo","setWorkingHourTo","messageFrom","setMessageFrom","errorFrom","setErrorFrom","messageTo","setMessageTo","errorTo","setErrorTo","isEditFrom","isEditTo","UsersWorkingHoursTable","allUsersWorkingHours","setAllUsersWorkingHours","forEach","handleOpenModal","WorkingHoursReport","moment","date","setDate","submitMonthReport","format","statusJSON","submitWholeReport","LocalizationProvider","dateAdapter","DateAdapter","locale","MobileDatePicker","minDate","maxDate","views","toolbarTitle","cancelText","inputFormat","mask","dateChanged","renderInput","UserWorkingHoursReport","calculateSallary","getSallaryRange","getSallaryRangeReport","getUserSallaryRangeReport","getAllSallaryReport","getUserAllSallaryReport","Sallary","setDateFrom","setDateTo","submitCalculateSallary","SallaryReport","sallaryRange","setSallaryRange","sallaryRangeId","setSallaryRangeId","calculation","getSallary","sallaryReport","sallaryReportJSON","getAllSallary","getDate","UserSallaryReport","getUserSallary","getUserAllSallary","UserCheckInForm","isSuccess","setIsSuccess","getDay","STATUSRECORD","WORK","VACATION","SICKLEAVE","BUSINESSVISIT","PAIDINDEMNITY","NOPAIDINDEMNITY","OtherStatus","vacationDay","setVacationDay","setVacationDayLeft","submitVacation","submitOtherStatus","Accordion","AccordionSummary","expandIcon","AccordionDetails","disablePast","EmployeeStatusForm","description","setDescription","FormLabel","RadioGroup","FormControlLabel","control","Radio","TextareaAutosize","placeholder","minHeight","maxHeight","DeleteEmployeeStatusModal","EmployeeStatusTable","setStatusId","idOfDeletedStatus","setIdOfDeletedStatus","deleteEmployeeStatusMessage","setEmployeeStatusMessage","splice","EditEmployeeStatus","PrivateRoute","PublicRoute","AdminRoute","AccountantRoute","AdminAccountantRoute","Router","path","element","defaults","withCredentials","App","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.132decac.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nfunction returnInitialState(storageKey) {\r\n    try {\r\n        const item = window.localStorage.getItem(storageKey);\r\n        return item ? JSON.parse(item) : {};\r\n    } catch (error) {\r\n        console.log(error);\r\n        return {};\r\n    }\r\n}\r\n  \r\nfunction useLocalStorage(storageKey) {\r\n    const [storedValue, setStoredValue] = useState(\r\n        returnInitialState(storageKey)\r\n    );\r\n\r\n    const setValue = (value) => {\r\n        try {\r\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n            window.localStorage.setItem(storageKey, JSON.stringify(valueToStore));\r\n            setStoredValue(valueToStore);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return [storedValue, setValue]\r\n}\r\n\r\nexport default useLocalStorage;","import axios from \"axios\";\r\n\r\nconst getLogOut = async () => {\r\n    try {\r\n        return await axios.delete(\"https://tarik-diplomski.herokuapp.com/api/auth/logout\");\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst isLoggedIn = async () => {\r\n    try {\r\n        return await axios.get(\"https://tarik-diplomski.herokuapp.com/api/auth/loggedIn\");\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getUserRole = async () => {\r\n    try {\r\n        return await axios.get(\"https://tarik-diplomski.herokuapp.com/api/auth/roleAuthorization\");\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getLogIn = async (email, password) => {\r\n    try {\r\n        return await axios.post(\"https://tarik-diplomski.herokuapp.com/api/auth/login\", { email: email, password: password });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { getLogOut, isLoggedIn, getUserRole, getLogIn };","import axios from 'axios';\r\n\r\nconst checkIn = async (user) => {\r\n    try {\r\n        return await axios.post(\"https://tarik-diplomski.herokuapp.com/api/statusRecord/checkIn\", user);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst isCheckIn = async () => {\r\n    try {\r\n        return await axios.get(\"https://tarik-diplomski.herokuapp.com/api/statusRecord/isCheckIn\");\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getStatusInCurrentMonth = async (month, year) => {\r\n    try {\r\n        return await axios.get(`https://tarik-diplomski.herokuapp.com/api/statusRecord/getStatusInCurrentMonth/${month}/${year}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst setHolidays = async (dateFrom, dateTo, vacationDayLeft) => {\r\n    try {\r\n        return await axios.post(\"https://tarik-diplomski.herokuapp.com/api/statusRecord/setHoliday\", {dateFrom: dateFrom, dateTo: dateTo, vacationDayLeft: vacationDayLeft});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst setOtherStatus = async (dateFrom, dateTo, status) => {\r\n    try {\r\n        return await axios.post(\"https://tarik-diplomski.herokuapp.com/api/statusRecord/setOtherStatus\", {dateFrom: dateFrom, dateTo: dateTo, status: status});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getHolidayDayLeft = async () => {\r\n    try {\r\n        return await axios.get(\"https://tarik-diplomski.herokuapp.com/api/statusRecord/getHolidayDayLeft\");\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getWorkingReport = async (_id, month, year) => {\r\n    try {\r\n        return await axios.get(`https://tarik-diplomski.herokuapp.com/api/statusRecord/getWorkingReport/${_id}/${month}/${year}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nconst getWholeWorkingReport = async (_id) => {\r\n    try {\r\n        return await axios.get(`https://tarik-diplomski.herokuapp.com/api/statusRecord/getWholeWorkingReport/${_id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getWorkingReportForAllUsers = async (month, year) => {\r\n    try {\r\n        return await axios.get(`https://tarik-diplomski.herokuapp.com/api/statusRecord/getWorkingReportForAllUsers/${month}/${year}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nconst getWholeWorkingReportForAllUsers = async () => {\r\n    try {\r\n        return await axios.get(`https://tarik-diplomski.herokuapp.com/api/statusRecord/getWholeWorkingReportForAllUsers`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { checkIn, isCheckIn, getStatusInCurrentMonth, setHolidays, setOtherStatus, getHolidayDayLeft, getWorkingReport, getWholeWorkingReport, getWorkingReportForAllUsers, getWholeWorkingReportForAllUsers };","import { useEffect, createContext, useCallback, useRef } from 'react';\r\nimport useLocalStorage from '../hooks/UseLocalStorage';\r\n\r\n//Api\r\nimport { getUserRole, isLoggedIn } from '../api/APIAuthentication';\r\nimport { isCheckIn } from '../api/APIStatusRecord';\r\n\r\nconst AuthContext = createContext();\r\n\r\nfunction AuthContextProvider(props) {\r\n    const isSubscribed = useRef(true);\r\n    \r\n    const [loggedIn, setLoggedIn] = useLocalStorage(props.authKey1);\r\n    const [authorization, setAuthorization] = useLocalStorage(props.authKey2);\r\n    const [flagCheckIn, setFlagCheckIn] = useLocalStorage(props.isCheckIn);\r\n\r\n    const getLoggedIn = useCallback ( async () => {\r\n        isLoggedIn().then((loggedInRes) => {\r\n            setLoggedIn(loggedInRes.data); \r\n        });\r\n    }, [setLoggedIn]);\r\n\r\n    const getAuthorization = useCallback ( async () => {\r\n        getUserRole().then((response) => {\r\n            setAuthorization(response.data);\r\n        });\r\n    }, [setAuthorization]);\r\n\r\n    const getIsCheckIn = useCallback ( async () => {\r\n        isCheckIn().then((response) => {\r\n            setFlagCheckIn(response.data);\r\n        });\r\n    }, [setFlagCheckIn])\r\n\r\n    useEffect(() => {\r\n        if(isSubscribed.current) {     \r\n            getLoggedIn();\r\n            getAuthorization();\r\n            if(loggedIn)\r\n                getIsCheckIn();\r\n            else \r\n                setFlagCheckIn(false);\r\n        }\r\n        \r\n        return () => isSubscribed.current = false;\r\n    }, [getLoggedIn, getAuthorization, getIsCheckIn, loggedIn, setFlagCheckIn]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{loggedIn, getLoggedIn, authorization, getAuthorization, flagCheckIn, getIsCheckIn, setFlagCheckIn}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthContext;\r\nexport { AuthContextProvider };\r\n","import { Box, Paper, Typography } from '@mui/material';\r\n\r\nconst Screen = (props) => {\r\n\r\n    return (\r\n        <Box>\r\n            <Box sx={{paddingTop: 3, ...(props.open && {marginLeft: 35}), ...(!props.open && {marginLeft: 15})}}>\r\n                <Typography variant=\"h4\">\r\n                    {props.page}\r\n                </Typography>\r\n            </Box>\r\n            <Box sx={{...(props.open && {marginLeft: 35}), ...(!props.open && {marginLeft: 15}),  \r\n                      marginRight: '40px', marginTop: '15px', marginBottom: '40px'}} >\r\n                <Paper elevation={24} sx={{width: '100%', padding: '15px', borderRadius: '10px',}} > \r\n                    {props.children}\r\n                </Paper>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Screen;\r\n","import { Box, Paper, Typography } from '@mui/material';\r\n\r\nconst Mobile = (props) => {\r\n    \r\n    return (\r\n        <Box>\r\n            <Box sx={{paddingTop: 3, ...(props.open && {marginLeft: 5}), ...(!props.open && {marginLeft: 5})}}>\r\n                <Typography variant='h4'>\r\n                    {props.page}\r\n                </Typography>\r\n            </Box>\r\n            <Box sx={{...(props.open && {marginLeft: 5}), ...(!props.open && {marginLeft: 5}),\r\n                      marginRight: '40px', marginTop: '15px', marginBottom: '40px'}}>\r\n                <Paper elevation={24} sx={{ width: '100%', padding: '20px', borderRadius: '10px'}}> \r\n                    {props.children}\r\n                </Paper>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Mobile;\r\n","import axios from \"axios\";\r\n\r\nconst resetPassword = async (id, email) => {\r\n    try {\r\n        return await axios.put(`https://tarik-diplomski.herokuapp.com/api/password/adminChangePassword/${id}`, email);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst changePassword = async (password) => {\r\n    try {\r\n        return await axios.put('https://tarik-diplomski.herokuapp.com/api/password/changePassword', password);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst forgotPassword = async (email) => {\r\n    try {\r\n        return await axios.put(\"https://tarik-diplomski.herokuapp.com/api/password/forgotpassword\", { email: email });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { resetPassword, changePassword, forgotPassword };","import { useState } from 'react';\r\nimport { Dialog , DialogTitle , DialogContent , DialogContentText , DialogActions , Button , TextField} from '@mui/material';\r\n\r\n//Api\r\nimport { forgotPassword } from '../api/APIPassword';\r\n\r\nconst ForgotPasswordModal = (props) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        forgotPassword(email).then((response) => {\r\n            props.resetPassword(response.data);\r\n            props.handleCloseModal();\r\n        });\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.handleCloseModal(\"\");\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.openModal} onClose={handleClose}>\r\n            <DialogTitle>Promjena lozinke</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Unesite vaš email i nova lozinka će vam doći na vašu email adresu.\r\n                </DialogContentText>\r\n                <TextField \r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleSubmit}>Pošalji</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default ForgotPasswordModal;\r\n","import { useState,  useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button , Container , TextField , Box , Alert , Stack , Snackbar} from '@mui/material';\r\n\r\n//Context\r\nimport AuthContext from '../context/AuthContext';\r\n\r\n//Icons\r\nimport LoginIcon from '@mui/icons-material/Login';\r\n\r\n//Components\r\nimport ForgotPasswordModal from '../components/ForgotPasswordModal';\r\n\r\n//Api\r\nimport { getLogIn } from '../api/APIAuthentication';\r\n\r\nconst boxForm = {\r\n    position: 'absolute',\r\n    width: {\r\n        xs: 250,\r\n        sm: 400, \r\n        md: 500,\r\n        lg: 600,\r\n        xl: 700 \r\n    },\r\n    margin: 'auto',\r\n    paddingTop: 20,\r\n    left: 0,\r\n    right: 0,\r\n    backgroundColor: '#cfe8fc'\r\n};\r\n\r\nconst Login = (props) => {\r\n    const { getLoggedIn, getAuthorization } = useContext(AuthContext); \r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [validation, setValidation] = useState(false);\r\n    const [resetPasswordMessage, setResetPasswordMessage] = useState(\"\");\r\n    const [success, setSuccess] = useState(undefined);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    \r\n    const handleOpenModal = () => {\r\n        setOpenModal(true);\r\n    }\r\n\r\n    const handleCloseModal = (message) => {\r\n        if(message === \"\") {\r\n            setResetPasswordMessage(\"\");\r\n            setOpenAlert(false);\r\n        }\r\n        else \r\n            setOpenAlert(true)\r\n        setOpenModal(false);\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        getLogIn(email, password).then((response) => {\r\n            getLoggedIn();\r\n            getAuthorization();\r\n\r\n            if(!response.data.validation) {\r\n                setMessage(response.data.message);\r\n                setValidation(response.data.validation);\r\n                setSuccess(undefined);\r\n                setOpenAlert(true);\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        props.setIsLogOut(false);\r\n        setOpenAlert(false);\r\n    }\r\n\r\n    const resetPassword = (data) => {\r\n        setResetPasswordMessage(data.message);\r\n        setSuccess(data.success);\r\n    }\r\n\r\n    return (\r\n        <Container disableGutters={true} maxWidth=\"100%\">\r\n            <Box sx={{ bgcolor: '#cfe8fc', height: '100vh' }}>\r\n                <Box sx={boxForm}>  \r\n                    <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                        <LoginIcon color=\"success\" fontSize=\"large\"/>\r\n                    </Box>\r\n                    <Box \r\n                        sx={{\r\n                            display: 'flex', \r\n                            flexDirection: 'column', \r\n                            alignItems: 'center',\r\n                            fontSize: '1.5rem'\r\n                        }} \r\n                        component=\"span\" \r\n                        color=\"secondary\" \r\n                    >\r\n                        Prijavi se\r\n                    </Box>\r\n                    <Box \r\n                        sx={{\r\n                            height: '70%', \r\n                            display: 'flex',\r\n                            flexDirection: 'column'\r\n                        }} \r\n                        component=\"form\"\r\n                        noValidate \r\n                        autoComplete=\"off\" \r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        <TextField \r\n                            sx={{marginBottom: 5, marginTop: 5}} \r\n                            label=\"Email\" \r\n                            type=\"email\" \r\n                            fullWidth={true} \r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <TextField \r\n                            sx={{marginBottom: 5}} \r\n                            label=\"Lozinka\" \r\n                            type=\"password\" \r\n                            fullWidth={true}  \r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <Button \r\n                            sx={{marginBottom: 2}} \r\n                            type=\"submit\" \r\n                            color=\"secondary\" \r\n                            fullWidth={true} \r\n                            variant=\"outlined\"\r\n                        >\r\n                            Prijavi se\r\n                        </Button>  \r\n                        { !validation && (\r\n                            <Stack sx={{ width: '100%' }} spacing={2}>\r\n                                <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                                    <Alert variant=\"filled\" severity=\"error\">\r\n                                        {message}\r\n                                    </Alert>\r\n                                </Snackbar>\r\n                            </Stack>\r\n                        )}\r\n                        { success === false && (\r\n                            <Stack sx={{ width: '100%' }} spacing={2}>\r\n                                <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                                    <Alert variant=\"filled\" severity=\"error\">\r\n                                        {resetPasswordMessage}\r\n                                    </Alert>\r\n                                </Snackbar>\r\n                            </Stack>\r\n                        )} \r\n                        { success === true && (\r\n                            <Stack sx={{ width: '100%' }} spacing={2}>\r\n                                <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                                    <Alert variant=\"filled\" severity=\"success\">\r\n                                        {resetPasswordMessage}\r\n                                    </Alert>\r\n                                </Snackbar>\r\n                            </Stack>\r\n                        )}\r\n                        { props.isLogOut === true && (\r\n                            <Stack sx={{ width: '100%' }} spacing={2}>\r\n                                <Snackbar open={props.isLogOut} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                                    <Alert variant=\"filled\" severity=\"success\">\r\n                                        {props.message}\r\n                                    </Alert>\r\n                                </Snackbar>\r\n                            </Stack>\r\n                        )}\r\n                    </Box>\r\n                    <Link onClick={handleOpenModal} to=\"/\">Zaboravili ste lozinku?</Link>\r\n                    <ForgotPasswordModal \r\n                        openModal={openModal} \r\n                        handleCloseModal={handleCloseModal} \r\n                        resetPassword={resetPassword} \r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","const ROLES = Object.freeze({\r\n    ADMINISTRATOR : 1,\r\n    ACCOUNTANT : 2,\r\n    EMPLOYEE : 3\r\n});\r\n\r\nexport { ROLES };","export default __webpack_public_path__ + \"static/media/googlecalendar.3462eb5f.png\";","import { useContext } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, Drawer, List, Divider, Avatar, ListItem, ListItemIcon, ListItemText, ListSubheader } from '@mui/material';\r\nimport { blue } from '@mui/material/colors';\r\n\r\n//Icons\r\nimport GroupIcon from '@mui/icons-material/Group';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport ReadMoreIcon from '@mui/icons-material/ReadMore';\r\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\r\n\r\n//Constants\r\nimport { ROLES } from '../../constants/AuthorizationConstants';\r\n\r\n//Context\r\nimport AuthContext from '../../context/AuthContext';\r\n\r\n//Image\r\nimport googlecalendar from '../../image/googlecalendar.png';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst openedMixin = (theme) => ({\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n});\r\n\r\nconst closedMixin = (theme) => ({\r\n    transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: `calc(${theme.spacing(7)} + 1px)`,\r\n    [theme.breakpoints.up('sm')]: {\r\n        width: `calc(${theme.spacing(9)} + 1px)`,\r\n    },\r\n});\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n    paddingTop: '5px',\r\n    ...theme.mixins.toolbar,\r\n}));\r\n\r\nconst LeftDrawer = styled(Drawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n    ({ theme, open }) => ({\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        boxSizing: 'border-box',\r\n        ...(open && {\r\n            ...openedMixin(theme),\r\n            '& .MuiDrawer-paper': openedMixin(theme),\r\n        }),\r\n        ...(!open && {\r\n            ...closedMixin(theme),\r\n            '& .MuiDrawer-paper': closedMixin(theme),\r\n        }),\r\n    }),\r\n);\r\n\r\nconst SideDrawerScreen = (props) => {\r\n    const { authorization } = useContext(AuthContext);\r\n\r\n    return (\r\n        <LeftDrawer variant=\"permanent\" open={props.open}>\r\n            <DrawerHeader>\r\n                <Link to=\"/home\" style={{textDecoration: 'none', color:'black'}}>\r\n                    <ListItem button key=\"Kalendar\">\r\n                        <ListItemIcon>\r\n                            <Avatar src={googlecalendar}/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Kalendar\"/>\r\n                    </ListItem>\r\n                </Link>\r\n            </DrawerHeader>\r\n            <Divider />\r\n            <DrawerHeader>\r\n                    <Link to=\"/yourProfile\" style={{textDecoration: 'none', color:'black'}}>\r\n                        <ListItem button key=\"fullName\">\r\n                            <ListItemIcon>\r\n                                <Avatar sx={{ bgcolor: blue[600] }} aria-label=\"recipe\">\r\n                                    {props.name.at(0)}\r\n                                </Avatar>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={props.name}/>\r\n                        </ListItem>\r\n                    </Link>\r\n                </DrawerHeader>\r\n            <Divider variant='middle' />\r\n            { ( authorization === ROLES.ADMINISTRATOR ) && (\r\n                <Box>\r\n                    <List> \r\n                        { props.open && (\r\n                            <ListSubheader >\r\n                                ADMIN OPCIJE\r\n                            </ListSubheader>\r\n                        )}\r\n                        <Link to=\"/allUsers\" style={{textDecoration: 'none', color:'black'}}>\r\n                            <ListItem button key=\"Zaposlenici\">\r\n                                <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                    <GroupIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Zaposlenici\" />\r\n                            </ListItem >\r\n                        </Link>\r\n                        <Link to=\"/employeesWorkingHours\" style={{textDecoration: 'none', color:'black'}}>\r\n                            <ListItem button key=\"RadnoVrijeme\">\r\n                                <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                    <AccessTimeIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Radno vrijeme\" />\r\n                            </ListItem >\r\n                        </Link>\r\n                        <Link to=\"/sallaryReport\" style={{textDecoration: 'none', color:'black'}}>\r\n                            <ListItem button key=\"PlateIzvjestaj\">\r\n                                <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                    <PictureAsPdfIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Plate izvještaj\" />\r\n                            </ListItem >\r\n                        </Link>\r\n                    </List>\r\n                    <Divider variant='middle'/>\r\n                </Box>\r\n            )}\r\n            { ( authorization === ROLES.ACCOUNTANT ) && (\r\n                <Box>\r\n                    <List> \r\n                        { props.open && (\r\n                            <ListSubheader >\r\n                                KNJIGOVOĐA OPCIJE\r\n                            </ListSubheader>\r\n                        )}\r\n                        <Link to=\"/allUsers\" style={{textDecoration: 'none', color:'black'}}>\r\n                            <ListItem button key=\"Zaposlenici\">\r\n                                <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                    <GroupIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Zaposlenici\" />\r\n                            </ListItem >\r\n                        </Link>\r\n                        <Link to=\"/employeesWorkingHours\" style={{textDecoration: 'none', color:'black'}}>\r\n                            <ListItem button key=\"RadnoVrijeme\">\r\n                                <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                    <AccessTimeIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Radno vrijeme\" />\r\n                            </ListItem >\r\n                        </Link>\r\n                        <Link to=\"/calculateSallary\" style={{textDecoration: 'none', color:'black'}}>\r\n                                <ListItem button key=\"ObračunPlata\">\r\n                                    <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                        <AttachMoneyIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Obračun plata\" />\r\n                                </ListItem >\r\n                            </Link>\r\n                        <Link to=\"/sallaryReport\" style={{textDecoration: 'none', color:'black'}}>\r\n                            <ListItem button key=\"PlateIzvjestaj\">\r\n                                <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                    <PictureAsPdfIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Plate izvještaj\" />\r\n                            </ListItem >\r\n                        </Link>\r\n                    </List>\r\n                    <Divider variant='middle'/>\r\n                </Box>\r\n            )}\r\n            <Box>\r\n                <List> \r\n                    { props.open && (\r\n                        <ListSubheader >\r\n                            ZAPOSLENIK OPCIJE\r\n                        </ListSubheader>\r\n                    )}\r\n                    <Link to=\"/dailyCheckIn\" style={{textDecoration: 'none', color:'black'}}>\r\n                        <ListItem button key=\"Prijava\">\r\n                            <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                <DoneIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Prijava\" />\r\n                        </ListItem >\r\n                    </Link>\r\n                    <Link to=\"/otherStatus\" style={{textDecoration: 'none', color:'black'}}>\r\n                        <ListItem button key=\"Ostali statusi\">\r\n                            <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                <ReadMoreIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Ostali statusi\" />\r\n                        </ListItem >\r\n                    </Link>\r\n                    <Link to=\"/userSallaryReport\" style={{textDecoration: 'none', color:'black'}}>\r\n                        <ListItem button key=\"PlateIzvjestaj\">\r\n                            <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                <PictureAsPdfIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Plate izvještaj\" />\r\n                        </ListItem >\r\n                    </Link>\r\n                </List>\r\n            </Box>\r\n        </LeftDrawer>\r\n    );\r\n}\r\n\r\nexport default SideDrawerScreen;\r\n","import { useContext } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, Drawer, List, Divider, Avatar, ListItem, ListItemIcon, ListItemText, ListSubheader} from '@mui/material';\r\nimport { blue } from '@mui/material/colors';\r\n\r\n//Icons\r\nimport GroupIcon from '@mui/icons-material/Group';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport ReadMoreIcon from '@mui/icons-material/ReadMore';\r\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\r\n\r\n//Constants\r\nimport { ROLES } from '../../constants/AuthorizationConstants';\r\n\r\n//Context\r\nimport AuthContext from '../../context/AuthContext';\r\n\r\n//Image\r\nimport googlecalendar from '../../image/googlecalendar.png';\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n    paddingTop: '5px',\r\n    ...theme.mixins.toolbar,\r\n}));\r\n\r\nconst SideDrawerMobile = (props) => {\r\n    const { authorization } = useContext(AuthContext);\r\n\r\n    const toggleDrawer = (open) => (event) => {\r\n        if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\r\n            return;\r\n        }\r\n        props.setOpen(open);\r\n    };\r\n\r\n    return (\r\n        <Drawer open={props.open} onClose={toggleDrawer(false)}>\r\n            <Box sx={{ width: 250 }} role=\"presentation\" onClick={toggleDrawer(false)} onKeyDown={toggleDrawer(false)}>\r\n                <DrawerHeader>\r\n                    <Link to=\"/home\" style={{textDecoration: 'none', color:'black'}}>\r\n                        <ListItem button key=\"Kalendar\">\r\n                            <ListItemIcon>\r\n                                <Avatar src={googlecalendar}/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Kalendar\"/>\r\n                        </ListItem>\r\n                    </Link>\r\n                </DrawerHeader>\r\n                <Divider />\r\n                <DrawerHeader>\r\n                    <Link to=\"/yourProfile\" style={{textDecoration: 'none', color:'black'}}>\r\n                        <ListItem button key=\"fullName\">\r\n                            <ListItemIcon>\r\n                                <Avatar sx={{ bgcolor: blue[600] }} aria-label=\"recipe\">\r\n                                    {props.name.at(0)}\r\n                                </Avatar>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={props.name}/>\r\n                        </ListItem>\r\n                    </Link>\r\n                </DrawerHeader>\r\n                <Divider variant='middle' />\r\n                { ( authorization === ROLES.ADMINISTRATOR ) && (\r\n                    <Box>\r\n                        <List> \r\n                            { props.open && (\r\n                                <ListSubheader >\r\n                                    ADMIN OPCIJE\r\n                                </ListSubheader>\r\n                            )}\r\n                            <Link to=\"/allUsers\" style={{textDecoration: 'none', color:'black'}}>\r\n                                <ListItem button key=\"Zaposlenici\">\r\n                                    <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                        <GroupIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Zaposlenici\" />\r\n                                </ListItem >\r\n                            </Link>\r\n                            <Link to=\"/employeesWorkingHours\" style={{textDecoration: 'none', color:'black'}}>\r\n                                <ListItem button key=\"RadnoVrijeme\">\r\n                                    <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                        <AccessTimeIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Radno vrijeme\" />\r\n                                </ListItem >\r\n                            </Link>\r\n                            <Link to=\"/sallaryReport\" style={{textDecoration: 'none', color:'black'}}>\r\n                                <ListItem button key=\"PlateIzvjestaj\">\r\n                                    <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                        <PictureAsPdfIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Plate izvještaj\" />\r\n                                </ListItem >\r\n                            </Link>\r\n                        </List>\r\n                        <Divider variant='middle'/>\r\n                    </Box>\r\n                )}\r\n                { ( authorization === ROLES.ACCOUNTANT ) && (\r\n                    <Box>\r\n                        <List> \r\n                            { props.open && (\r\n                                <ListSubheader >\r\n                                    KNJIGOVOĐA OPCIJE\r\n                                </ListSubheader>\r\n                            )}\r\n                            <Link to=\"/allUsers\" style={{textDecoration: 'none', color:'black'}}>\r\n                                <ListItem button key=\"Zaposlenici\">\r\n                                    <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                        <GroupIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Zaposlenici\" />\r\n                                </ListItem >\r\n                            </Link>\r\n                            <Link to=\"/employeesWorkingHours\" style={{textDecoration: 'none', color:'black'}}>\r\n                                <ListItem button key=\"RadnoVrijeme\">\r\n                                    <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                        <AccessTimeIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Radno vrijeme\" />\r\n                                </ListItem >\r\n                            </Link>\r\n                            <Link to=\"/calculateSallary\" style={{textDecoration: 'none', color:'black'}}>\r\n                                <ListItem button key=\"ObračunPlata\">\r\n                                    <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                        <AttachMoneyIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Obračun plata\" />\r\n                                </ListItem >\r\n                            </Link>\r\n                            <Link to=\"/sallaryReport\" style={{textDecoration: 'none', color:'black'}}>\r\n                                <ListItem button key=\"PlateIzvjestaj\">\r\n                                    <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                        <PictureAsPdfIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Plate izvještaj\" />\r\n                                </ListItem >\r\n                            </Link>\r\n                        </List>\r\n                        <Divider variant='middle'/>\r\n                    </Box>\r\n                )}\r\n                <Box>\r\n                    <List> \r\n                        { props.open && (\r\n                            <ListSubheader >\r\n                                ZAPOSLENIK OPCIJE\r\n                            </ListSubheader>\r\n                        )}\r\n                        <Link to=\"/dailyCheckIn\" style={{textDecoration: 'none', color:'black'}}>\r\n                            <ListItem button key=\"Prijava\">\r\n                                <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                    <DoneIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Prijava\" />\r\n                            </ListItem >\r\n                        </Link>\r\n                        <Link to=\"/otherStatus\" style={{textDecoration: 'none', color:'black'}}>\r\n                            <ListItem button key=\"Ostali statusi\">\r\n                                <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                    <ReadMoreIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Ostali statusi\" />\r\n                            </ListItem >\r\n                        </Link>\r\n                        <Link to=\"/userSallaryReport\" style={{textDecoration: 'none', color:'black'}}>\r\n                            <ListItem button key=\"PlateIzvjestaj\">\r\n                                <ListItemIcon sx={{paddingLeft: 1}}>\r\n                                    <PictureAsPdfIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Plate izvještaj\" />\r\n                            </ListItem >\r\n                        </Link>\r\n                    </List>\r\n                </Box>  \r\n            </Box>\r\n        </Drawer>  \r\n    );\r\n}\r\n\r\nexport default SideDrawerMobile;\r\n","import axios from 'axios';\r\n\r\nconst getAllUsers = async () => {\r\n    try {\r\n        return await axios.get(\"https://tarik-diplomski.herokuapp.com/api/users/getAllUsers\");\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst createUser = async (user) => {\r\n    try {\r\n        return await axios.post(\"https://tarik-diplomski.herokuapp.com/api/users/create\", user);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getUserData = async (params) => {\r\n    try {\r\n        return await axios.get(`https://tarik-diplomski.herokuapp.com/api/users/profile/${params.userId}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getYourProfileData = async () => {\r\n    try {\r\n        return await axios.get('https://tarik-diplomski.herokuapp.com/api/users/yourProfile');\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst changeUser = async (user, params) => {\r\n    try {\r\n        return await axios.put(`https://tarik-diplomski.herokuapp.com/api/users/edit/${params.userId}`, user);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst changeUserSallary = async (user, params) => {\r\n    try {\r\n        return await axios.put(`https://tarik-diplomski.herokuapp.com/api/users/editSallary/${params.userId}`, user);\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n//Radno vrijeme\r\n\r\nconst getAllUsersWorkingHours = async () => {\r\n    try {\r\n        return await axios.get(\"https://tarik-diplomski.herokuapp.com/api/users/getAllUsersWorkingHours\");\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst changeUserWorkingHours = async (workingHour) => {\r\n    try {\r\n        return await axios.put(`https://tarik-diplomski.herokuapp.com/api/users/editUserWorkingHours`, workingHour);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getYourWorkingHours = async () => {\r\n    try {\r\n        return await axios.get('https://tarik-diplomski.herokuapp.com/api/users/yourWorkingHours');\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { getAllUsers, createUser, getUserData, changeUser, getYourProfileData, getAllUsersWorkingHours, changeUserWorkingHours, getYourWorkingHours, changeUserSallary };","import { useEffect, useState } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, CssBaseline, useMediaQuery } from '@mui/material';\r\n\r\n//Components\r\nimport SideDrawerScreen from './SideDrawerScreen';\r\nimport SideDrawerMobile from './SideDrawerMobile';\r\n\r\n//Api\r\nimport { getYourProfileData } from '../../api/APIUsers';\r\n\r\nconst SideDrawer = (props) => {\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const [name, setName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        getYourProfileData().then((response) => {\r\n            if(isSubscribed) \r\n                setName(response.data.user.firstName + \" \" + response.data.user.lastName);\r\n        });\r\n\r\n        return () => isSubscribed = false;\r\n    }, []);\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex' }}>\r\n            <CssBaseline />\r\n            {\r\n                matches && (\r\n                    <SideDrawerMobile open={props.open} setOpen={props.setOpen} name={name}/>\r\n                )\r\n            } \r\n            { \r\n                !matches && (\r\n                    <SideDrawerScreen open={props.open} name={name}/>\r\n                )\r\n            }\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default SideDrawer;\r\n","import { useState , useRef , useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { styled } from '@mui/material/styles';\r\nimport { AppBar, Box, Toolbar, IconButton, MenuList, MenuItem, ClickAwayListener, Popper, Grow, Paper, Chip } from '@mui/material';\r\n\r\n//Context\r\nimport AuthContext from '../context/AuthContext';\r\n\r\n//Icons\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\n\r\n//Api\r\nimport { getLogOut } from '../api/APIAuthentication';\r\n\r\nconst StyledBox = styled(Box, { shouldForwardProp: (prop) => prop !== 'open' })(({theme, open}) => ({\r\n    [theme.breakpoints.down('md')]: {\r\n        ...(!open && { marginLeft: 0}),\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n        ...(!open && {marginLeft: 73}),\r\n        ...(open && {marginLeft: 240}),\r\n    }\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n    const anchorRef = useRef(null);\r\n\r\n    const { getLoggedIn, getAuthorization, flagCheckIn } = useContext(AuthContext);\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const logOut = async (event) => {\r\n        event.preventDefault();\r\n\r\n        getLogOut().then((response) => {\r\n            getLoggedIn();\r\n            getAuthorization();\r\n            props.callBack(response.data.message, response.data.isLogOut);\r\n        });\r\n    }\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) \r\n            return;\r\n        setOpen(false);\r\n    };\r\n\r\n    function handleListKeyDown(event) {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            setOpen(false);\r\n        } else if (event.key === 'Escape') {\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    const prevOpen = useRef(open);\r\n    useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    const renderMobileMenu = (\r\n        <Popper style={{zIndex: '100'}} \r\n            open={open}\r\n            anchorEl={anchorRef.current}\r\n            role={undefined}\r\n            placement=\"bottom-start\"\r\n            transition\r\n            disablePortal\r\n        >\r\n            {({ TransitionProps, placement }) => (\r\n                <Grow {...TransitionProps} style={{ transformOrigin: placement === 'bottom-start' ? 'right top' : 'right top' }}>\r\n                    <Paper>\r\n                        <ClickAwayListener onClickAway={handleClose}>\r\n                            <MenuList autoFocus={open} id='composition-menu' onKeyDown={handleListKeyDown} >\r\n                                <Link to=\"/yourProfile\" style={{textDecoration: 'none', width: '100%', color: 'black'}} >\r\n                                    <MenuItem>\r\n                                        <IconButton size=\"large\" color=\"inherit\">\r\n                                            <AccountCircle />\r\n                                        </IconButton>\r\n                                        <p>Profile</p>\r\n                                    </MenuItem>\r\n                                </Link> \r\n                                <MenuItem onClick={logOut}>\r\n                                    <IconButton size=\"large\" color=\"inherit\">\r\n                                        <LogoutIcon />\r\n                                    </IconButton>\r\n                                    <p>Odjavi se</p>\r\n                                </MenuItem>\r\n                            </MenuList>\r\n                        </ClickAwayListener>\r\n                    </Paper>\r\n                </Grow>\r\n            )}\r\n        </Popper>\r\n    );\r\n\r\n    return (\r\n        <StyledBox sx={[{ flexGrow: 1 }]} open={props.open}>\r\n            <AppBar position='static'>\r\n                <Toolbar>\r\n                    <IconButton size=\"large\" color=\"inherit\" sx={{ ml: 0,  ...(!props.open && {marginLeft: 1})}} onClick={props.toggleSideDrawer}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    { !flagCheckIn && (\r\n                        <Chip color=\"warning\" label=\"Izvršite prijavu za današnji dan!\"/>\r\n                    )}\r\n                    <Box sx={{ flexGrow: 1 }} />\r\n                    <Box sx={{ display: { xs: 'none', md: 'flex' }}}>\r\n                        <Link to=\"/yourProfile\" style={{textDecoration: 'none', width: '100%', color: 'white'}} >\r\n                            <IconButton size=\"large\" color=\"inherit\">\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                        </Link>\r\n                        <IconButton size=\"large\" color=\"inherit\" onClick={logOut}>\r\n                            <LogoutIcon />\r\n                        </IconButton>\r\n                    </Box>\r\n                    <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n                        <IconButton\r\n                            ref={anchorRef}\r\n                            id='composition-button'\r\n                            size=\"large\"\r\n                            aria-label=\"show more\"\r\n                            aria-controls={open ? 'composition-menu' : undefined}\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleToggle}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n        </StyledBox>\r\n    );   \r\n}\r\n\r\nexport default Navbar;\r\n","const DAYS = ['Pon','Uto','Sri','Čet','Pet','Sub','Ned'];\r\n\r\nexport { DAYS };","import axios from \"axios\";\r\n\r\nconst getNextMonth = async (month, year) => {\r\n    try {\r\n        var nextMonth = month;\r\n        var nextYear = year;\r\n\r\n        if(month === 11) {\r\n            nextMonth = 0;\r\n            nextYear = nextYear + 1;\r\n        } else\r\n            nextMonth = nextMonth + 1;\r\n        \r\n        return await axios.post(\"https://tarik-diplomski.herokuapp.com/api/calendar/getNextMonth\", {month: nextMonth, year: nextYear});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getPreviousMonth = async (month, year) => {\r\n    try {\r\n        var previousMonth = month;\r\n        var previousYear = year;\r\n\r\n        if(month === 0) {\r\n            previousMonth = 11;\r\n            previousYear = previousYear - 1;\r\n        } else\r\n            previousMonth = previousMonth - 1;\r\n        \r\n        return await axios.post(\"https://tarik-diplomski.herokuapp.com/api/calendar/getPreviousMonth\", {month: previousMonth, year: previousYear});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getDaysInCurrentMonth = async () => {\r\n    try {\r\n        return await axios.get(\"https://tarik-diplomski.herokuapp.com/api/calendar/getDaysInCurrentMonth\");\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { getNextMonth, getPreviousMonth, getDaysInCurrentMonth };","import { useEffect, useState } from 'react';\r\nimport { Box , Button } from '@mui/material';\r\n\r\n//CSS\r\nimport './calendar.css';\r\n\r\n//Icons\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\n\r\n//Constants\r\nimport { DAYS } from '../../constants/CalendarConstants';\r\n\r\n//Api\r\nimport { getDaysInCurrentMonth, getNextMonth, getPreviousMonth } from '../../api/APIScreenCalendar';\r\nimport { getStatusInCurrentMonth } from '../../api/APIStatusRecord';\r\n\r\nconst ScreenCalendar = () => {\r\n    const [today, setToday] = useState(0);\r\n    const [month, setMonth] = useState(0);\r\n    const [monthName, setMonthName] = useState('');\r\n    const [year, setYear] = useState(0);\r\n    const [daysInMonth, setDaysInMonth] = useState([]);\r\n    const [status, setStatus] = useState([]);\r\n\r\n    const handleNext = async () => {\r\n        getNextMonth(month, year).then((calendar) => {\r\n            setToday(calendar.data.today);\r\n            setMonth(calendar.data.month);\r\n            setMonthName(calendar.data.nextMonthName);\r\n            setYear(calendar.data.year);\r\n            setDaysInMonth(calendar.data.daysInNextMonth);\r\n            getStatusInCurrentMonth(calendar.data.month, calendar.data.year).then((response) => {\r\n                setStatus(response.data.status);\r\n            });\r\n        });\r\n    }\r\n\r\n    const handlePrevious = async (event) => {\r\n        event.preventDefault();\r\n        getPreviousMonth(month, year).then((calendar) => {\r\n            setToday(calendar.data.today);\r\n            setMonth(calendar.data.month);\r\n            setMonthName(calendar.data.previousMonthName);\r\n            setYear(calendar.data.year);\r\n            setDaysInMonth(calendar.data.daysInPreviousMonth);\r\n            getStatusInCurrentMonth(calendar.data.month, calendar.data.year).then((response) => {\r\n                setStatus(response.data.status);\r\n            });\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n        \r\n        getDaysInCurrentMonth().then((calendar) => {\r\n            if(isSubscribed) {\r\n                setToday(calendar.data.currentDay);\r\n                setMonth(calendar.data.month);\r\n                setMonthName(calendar.data.currentMonthName);\r\n                setYear(calendar.data.currentYear);\r\n                setDaysInMonth(calendar.data.daysInCurrentMonth);\r\n                getStatusInCurrentMonth(calendar.data.month, calendar.data.currentYear).then((response) => {\r\n                    setStatus(response.data.status);\r\n                });\r\n            }\r\n        });\r\n        return () => isSubscribed = false\r\n    }, []);\r\n\r\n    return (\r\n        <Box>\r\n            <table id=\"calendar\">\r\n                <tbody>\r\n                    <tr className=\"header\">\r\n                        <th>\r\n                            <Button variant=\"contained\" onClick={handlePrevious}>\r\n                                <ArrowBackIosIcon />\r\n                            </Button>\r\n                            {monthName.toString().concat('  ' + year.toString())}\r\n                            <Button variant=\"contained\" onClick={handleNext}>\r\n                                <ArrowForwardIosIcon />\r\n                            </Button>\r\n                        </th>\r\n                    </tr>   \r\n                    <tr className=\"weekdays\">\r\n                        {\r\n                            DAYS.map((day, index) => {\r\n                                return (\r\n                                    <th key={index}>{day}</th>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    {\r\n                        daysInMonth.map((week, indexRow) => {\r\n                            if ((month === new Date().getMonth() && year === new Date().getFullYear())) \r\n                                return (\r\n                                    <tr className='days' key={indexRow}>\r\n                                    {\r\n                                        week.map((day, indexCell) => {\r\n                                            var dayStatusIndex = status.findIndex((filterStatus) => {\r\n                                                return filterStatus.day === day;\r\n                                            });\r\n                                            if(indexRow === 0 && day > 7 && indexCell !== 5 && indexCell !== 6)\r\n                                                return (\r\n                                                    <td key={indexCell} className='day other-month'>\r\n                                                        <div className='date'>{day}</div>\r\n                                                    </td>\r\n                                                )\r\n                                            else if(daysInMonth.length -1 === indexRow && day < 7 && indexCell !== 5 && indexCell !== 6)\r\n                                                return (\r\n                                                    <td key={indexCell} className='day other-month'>\r\n                                                        <div className='date'>{day}</div>\r\n                                                    </td>\r\n                                                )\r\n                                            else if(day === today && indexCell !== 5 && indexCell !== 6) \r\n                                                return (    \r\n                                                    <td key={indexCell} className='day today'>\r\n                                                        <div className='date'>{day}</div>\r\n                                                        {   \r\n                                                            dayStatusIndex !== -1 && ( \r\n                                                                status[dayStatusIndex].day === day && (\r\n                                                                    <div className='event'>{status[dayStatusIndex].status}</div>\r\n                                                                )\r\n                                                            )\r\n                                                        }\r\n                                                    </td>\r\n                                                )\r\n                                            else if (indexCell !== 5 && indexCell !== 6)\r\n                                                return (\r\n                                                    <td key={indexCell} className='day'>\r\n                                                        <div className='date'>{day}</div>\r\n                                                        {\r\n                                                            dayStatusIndex !== -1 && ( \r\n                                                                status[dayStatusIndex].day === day && (\r\n                                                                    <div className='event'>{status[dayStatusIndex].status}</div>\r\n                                                                )\r\n                                                            )\r\n                                                        }\r\n                                                    </td>\r\n                                                )\r\n                                            else if(indexRow === 0 && day > 7 && (indexCell === 5 || indexCell === 6))\r\n                                                return (\r\n                                                    <td key={indexCell} className='day other-month-weekend'>\r\n                                                        <div className='date'>{day}</div>\r\n                                                    </td>\r\n                                                )\r\n                                            else if(daysInMonth.length -1 === indexRow && day < 7 && (indexCell === 5 || indexCell === 6))\r\n                                                return (\r\n                                                    <td key={indexCell} className='day other-month-weekend'>\r\n                                                        <div className='date'>{day}</div>\r\n                                                    </td>\r\n                                                )\r\n                                            else if(day === today && (indexCell === 5 || indexCell === 6)) \r\n                                                return (    \r\n                                                    <td key={indexCell} className='day today-weekend'>\r\n                                                        <div className='date'>{day}</div>\r\n                                                    </td>\r\n                                                )\r\n                                            else \r\n                                                return (\r\n                                                    <td key={indexCell} className='day weekend'>\r\n                                                        <div className='date'>{day}</div>\r\n                                                    </td>\r\n                                                )\r\n                                        })\r\n                                    }\r\n                                    </tr>\r\n                                )\r\n                            else \r\n                                return (\r\n                                    <tr className='days' key={indexRow}>\r\n                                    {\r\n                                        week.map((day, indexCell) => {\r\n                                            var dayStatusIndex = status.findIndex((filterStatus) => {\r\n                                                return filterStatus.day === day;\r\n                                            });\r\n                                            if(indexRow === 0 && day > 7 && indexCell !== 5 && indexCell !== 6)\r\n                                                return (\r\n                                                    <td key={indexCell} className='day other-month'>\r\n                                                        <div className='date'>{day}</div>\r\n                                                    </td>\r\n                                                )\r\n                                            else if(daysInMonth.length -1 === indexRow && day < 7 && indexCell !== 5 && indexCell !== 6)\r\n                                                return (\r\n                                                    <td key={indexCell} className='day other-month'>\r\n                                                        <div className='date'>{day}</div>\r\n                                                    </td>\r\n                                                )\r\n                                            else if (indexCell !== 5 && indexCell !== 6)\r\n                                                return (\r\n                                                    <td key={indexCell} className='day'>\r\n                                                        <div className='date'>{day}</div>\r\n                                                        {\r\n                                                            dayStatusIndex !== -1 && ( \r\n                                                                status[dayStatusIndex].day === day && (\r\n                                                                    <div className='event'>{status[dayStatusIndex].status}</div>\r\n                                                                )\r\n                                                            )\r\n                                                        }\r\n                                                    </td>\r\n                                                )\r\n                                            else if(indexRow === 0 && day > 7 && (indexCell === 5 || indexCell === 6))\r\n                                                return (\r\n                                                    <td key={indexCell} className='day other-month-weekend'>\r\n                                                        <div className='date'>{day}</div>\r\n                                                    </td>\r\n                                                )\r\n                                            else if(daysInMonth.length -1 === indexRow && day < 7 && (indexCell === 5 || indexCell === 6))\r\n                                                return (\r\n                                                    <td key={indexCell} className='day other-month-weekend'>\r\n                                                        <div className='date'>{day}</div>\r\n                                                    </td>\r\n                                                )\r\n                                            else \r\n                                                return (\r\n                                                    <td key={indexCell} className='day weekend'>\r\n                                                        <div className='date'>{day}</div>\r\n                                                    </td>\r\n                                                )\r\n                                        })\r\n                                    }\r\n                                    </tr>\r\n                                ) \r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ScreenCalendar;\r\n","import { useState } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, Stack } from '@mui/material';\r\n\r\n//Api\r\nimport { changePassword } from '../../../api/APIPassword';\r\n\r\nconst ChangePasswordModal = (props) => {\r\n    const [oldPassword, setOldPassword] = useState(\"\");\r\n    const [newPassword, setNewPssword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState({messageOldPassword: \"\", messageNewPassword: \"\", messageConfirmPassword: \"\"});\r\n    const [errorBool, setErrorBool] = useState({errorOldPassword: false, errorNewPassword: false, errorConfirmPassword: false});\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const password = {\r\n            _id: props._id, \r\n            oldPassword: oldPassword, \r\n            newPassword: newPassword, \r\n            confirmPassword: confirmPassword, \r\n            errorMessage: errorMessage, \r\n            errorBool: errorBool\r\n        }\r\n\r\n        changePassword(password).then((response) => {\r\n            if(response.data.success === true) {\r\n                setOldPassword(\"\");\r\n                setNewPssword(\"\");\r\n                setConfirmPassword(\"\");\r\n                setErrorMessage({messageOldPassword: \"\", messageNewPassword: \"\", messageConfirmPassword: \"\"});\r\n                setErrorBool({errorOldPassword: false, errorNewPassword: false, errorConfirmPassword: false});\r\n                props.handleCloseModal(response.data.message);\r\n                props.changePassword(response.data);\r\n            } else {\r\n                setErrorMessage(response.data.errorMessage);\r\n                setErrorBool(response.data.errorBool);\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOldPassword(\"\");\r\n        setNewPssword(\"\");\r\n        setConfirmPassword(\"\");\r\n        setErrorMessage({messageOldPassword: \"\", messageNewPassword: \"\", messageConfirmPassword: \"\"});\r\n        setErrorBool({errorOldPassword: false, errorNewPassword: false, errorConfirmPassword: false});\r\n        props.handleCloseModal(\"\");\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.openModal} fullWidth={true} onClose={handleClose}>\r\n            <DialogTitle>Promjena lozinke</DialogTitle>\r\n            <DialogContent>\r\n                <TextField \r\n                    onChange={(e) => {\r\n                        errorBool.errorOldPassword = false\r\n                        errorMessage.messageOldPassword = \"\"\r\n                        setOldPassword(e.target.value)\r\n                    }}\r\n                    autoFocus\r\n                    focused\r\n                    error={errorBool.errorOldPassword}\r\n                    margin='dense'\r\n                    label=\"Stara lozinka\"\r\n                    type=\"password\"\r\n                    helperText={errorMessage.messageOldPassword}\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                />\r\n                 <TextField \r\n                    onChange={(e) => setNewPssword(e.target.value)}\r\n                    focused\r\n                    error={errorBool.errorNewPassword}\r\n                    margin='dense'\r\n                    label=\"Nova lozinka\"\r\n                    type=\"password\"\r\n                    helperText={errorMessage.messageNewPassword}\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                />\r\n                 <TextField \r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    focused\r\n                    error={errorBool.errorConfirmPassword}\r\n                    margin=\"dense\"\r\n                    label=\"Potvrda lozinke\"\r\n                    type=\"password\"\r\n                    helperText={errorMessage.messageConfirmPassword}\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Stack direction=\"row\" spacing={2}>\r\n                    <Button onClick={handleClose} color='error'>Odustani</Button>\r\n                    <Button onClick={handleSubmit}>Promjeni</Button>\r\n                </Stack>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default ChangePasswordModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { Avatar, Box, Button, Card, CardActions, CardContent, CardHeader, Divider, \r\n         TextField, Stack, Snackbar, Alert } from '@mui/material';\r\nimport { blue } from '@mui/material/colors';\r\n\r\n//Component\r\nimport ChangePasswordModal from './Modals/ChangePasswordModal';\r\n\r\n//Api\r\nimport { getYourProfileData } from '../../api/APIUsers';\r\n\r\nconst ViewYourProfile = () => {\r\n    const [firstLetter, setFirstLetter] = useState(\"\");\r\n    const [user, setUser] = useState({\r\n        _id: \"\", \r\n        firstName: \"\", \r\n        lastName: \"\", \r\n        jmbg: \"\", \r\n        address: \"\",\r\n        email: \"\", \r\n        position: \"\", \r\n        hourlyWage: 2.05, \r\n        personalDeductions: 0,\r\n        role: \"\", \r\n        vacation: 0\r\n    });\r\n  \r\n    const [success, setSuccess] = useState(undefined);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [changePasswordMessage, setChangePasswordMessage] = useState(\"\");\r\n    \r\n    const handleOpenModal = () => {\r\n        setOpenModal(true);\r\n    }\r\n\r\n    const handleCloseModal = (message) => {\r\n        if(message === \"\") {\r\n            setChangePasswordMessage(\"\");\r\n            setOpenAlert(false);\r\n        }\r\n        else \r\n            setOpenAlert(true);\r\n        \r\n        setOpenModal(false);\r\n    }\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenAlert(false);\r\n    }\r\n\r\n    const changePassword = (data) => {\r\n        setChangePasswordMessage(data.message);\r\n        setSuccess(data.success);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        getYourProfileData().then((response) => {\r\n            if(isSubscribed) {\r\n                setUser(response.data.user);\r\n                setFirstLetter(JSON.stringify(response.data.user.firstName).charAt(1));\r\n            }\r\n        });\r\n\r\n        return () => isSubscribed = false;\r\n    }, []);\r\n\r\n    return (\r\n        <Box>\r\n            <Box>\r\n                <Card>\r\n                    <CardHeader \r\n                        avatar={\r\n                            <Avatar sx={{ bgcolor: blue[600] }} aria-label=\"recipe\">\r\n                                {firstLetter}\r\n                            </Avatar>\r\n                        }\r\n                        title={user.firstName + \" \" + user.lastName}\r\n                        subheader={user.position} \r\n                    />\r\n                    <Divider variant='middle'/>\r\n                    <CardContent>\r\n                        <TextField sx={{paddingBottom: 2}} disabled fullWidth label=\"Ime\" variant=\"standard\" value={user.firstName} />\r\n                        <TextField sx={{paddingBottom: 2}} disabled fullWidth label=\"Prezime\" variant=\"standard\" value={user.lastName} />\r\n                        <TextField sx={{paddingBottom: 2}} disabled fullWidth label=\"Email\" variant=\"standard\" value={user.email} />\r\n                        <TextField sx={{paddingBottom: 2}} disabled fullWidth label=\"JMBG\" variant=\"standard\" value={user.jmbg} />\r\n                        <TextField sx={{paddingBottom: 2}} disabled fullWidth label=\"Adresa\" variant=\"standard\" value={user.address} />\r\n                        <TextField sx={{paddingBottom: 2}} disabled fullWidth label=\"Radno mjesto\" variant=\"standard\" value={user.position} />\r\n                        <TextField sx={{paddingBottom: 2}} disabled fullWidth label=\"Broj dana godišnjeg\" variant=\"standard\" value={user.vacation} />\r\n                        <TextField sx={{paddingBottom: 2}} disabled fullWidth label=\"Lični odbici\" variant=\"standard\" value={`${user.personalDeductions} KM`} />\r\n                        <TextField sx={{paddingBottom: 2}} disabled fullWidth label=\"Satnica\" variant=\"standard\" value={`${user.hourlyWage} KM`} />\r\n                        <TextField sx={{paddingBottom: 2}} disabled fullWidth label=\"Rola\" variant=\"standard\" value={user.role} />\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button variant='contained' color='primary' fullWidth={true} onClick={handleOpenModal}>\r\n                            Nova lozinka\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            </Box>\r\n            <Box>\r\n                { success === true && (\r\n                    <Stack sx={{ width: '100%' }} spacing={2}>\r\n                        <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                            <Alert variant=\"filled\" severity=\"success\">\r\n                                {changePasswordMessage}\r\n                            </Alert>\r\n                        </Snackbar>\r\n                    </Stack>\r\n                )}\r\n                <ChangePasswordModal \r\n                    _id={user._id} \r\n                    openModal={openModal} \r\n                    handleCloseModal={handleCloseModal} \r\n                    changePassword={changePassword} \r\n                />\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ViewYourProfile;\r\n","import { InputLabel, OutlinedInput, InputAdornment, IconButton, FormControl } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst Search = (props) => {\r\n\r\n    const requestSearch = (searchedVal) => {\r\n        props.requestSearch(searchedVal);\r\n    }\r\n\r\n    return (\r\n        <FormControl sx={{width: '100%'}} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-search\">Pretraži...</InputLabel>\r\n            <OutlinedInput\r\n                id=\"outlined-adornment-search\"\r\n                endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      {props.search === \"\" ? (\r\n                          <IconButton edge=\"end\">\r\n                              <SearchIcon/>\r\n                          </IconButton>\r\n                      ) : (\r\n                          <IconButton edge=\"end\" onClick={props.cancelSearch}>\r\n                              <CloseIcon/>\r\n                          </IconButton>\r\n                      )}\r\n                    </InputAdornment>\r\n                }\r\n                value={props.search}\r\n                sx={{height: '50px'}}\r\n                fullWidth={true}\r\n                label=\"Pretraži...\"\r\n                onChange={(searchVal) => requestSearch(searchVal)}\r\n            />\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import { jsPDF } from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport axios from 'axios';\r\n\r\nasync function exportPDF(tableName, allUsers, tableHeaders, userJSON) {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; \r\n    const orientation = \"landscape\"; \r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    const AmiriRegular = await axios.get('https://tarik-diplomski.herokuapp.com/api/fonts/getAmiriFont');\r\n    \r\n    doc.addFileToVFS(\"Amiri-Regular.ttf\", AmiriRegular.data.encode);\r\n    doc.addFont(\"Amiri-Regular.ttf\", \"Amiri\", \"normal\");\r\n    doc.setFont(\"Amiri\");\r\n    doc.setFontSize(15);\r\n\r\n    const title = tableName;\r\n    const headers = tableHeaders;\r\n\r\n    const data = allUsers.map(user => { \r\n        return (\r\n            userJSON.map(i => {\r\n                return [user[i]];\r\n        }));\r\n    });\r\n\r\n    let content = {\r\n        startY: 50,\r\n        head: headers,\r\n        body: data,\r\n        headStyles: {\r\n            font: \"Amiri\"\r\n        },\r\n        bodyStyles: {\r\n            font: \"Amiri\"\r\n        }\r\n    };\r\n    \r\n    doc.text(title, 40, 40);\r\n    doc.autoTable(content);\r\n    \r\n    doc.save(tableName + '.pdf');\r\n}\r\n\r\nexport { exportPDF };","import { useEffect, useState, useContext } from 'react';\r\nimport { Box, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Toolbar, Typography, IconButton, Tooltip, Button, Stack, TablePagination} from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Icons\r\nimport AddCircleOutlineRoundedIcon from '@mui/icons-material/AddCircleOutlineRounded';\r\nimport RemoveRedEyeOutlinedIcon from '@mui/icons-material/RemoveRedEyeOutlined';\r\nimport ModeEditOutlineOutlinedIcon from '@mui/icons-material/ModeEditOutlineOutlined';\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\n\r\n//Constants\r\nimport { ROLES } from '../../constants/AuthorizationConstants';\r\n\r\n//API\r\nimport { getAllUsers } from '../../api/APIUsers';\r\n\r\n//Componenets\r\nimport Search from '../Search';\r\n\r\n//PDF table of users\r\nimport { exportPDF } from '../../helpers/ExportToPDF';\r\n\r\n//Context\r\nimport AuthContext from '../../context/AuthContext';\r\n\r\nconst UsersTable = () => {\r\n    const { authorization } = useContext(AuthContext);\r\n\r\n    //Svi korisnici\r\n    const [allUsers, setAllUsers] = useState([]);\r\n\r\n    //Pretraživanje\r\n    const [search, setSearch] = useState('');\r\n    const [searchUsers, setSearchUsers] = useState([]);\r\n\r\n    //Za kreiranje tabele u pdfu\r\n    const [tableHeaders, setTableHeaders] = useState([[]]);\r\n    const [userJSON, setUserJSON] = useState([]);\r\n\r\n    //Broj redova u tabeli po stranici\r\n    const [page, setPage] = useState(0);\r\n    const [rowLength, setRowLength] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value));\r\n        setPage(0);\r\n    };\r\n\r\n    const requestSearch = (searchedVal) => {\r\n        setSearch(searchedVal.target.value)\r\n        \r\n        const filteredUsers = allUsers.filter((user) => {\r\n            return user.userName.toLowerCase().includes(searchedVal.target.value.toLowerCase()) ? user : null;\r\n        });\r\n        \r\n        setSearchUsers(filteredUsers);\r\n        setRowLength(filteredUsers.length);\r\n    };\r\n    \r\n    const cancelSearch = () => {\r\n        setSearch('');\r\n        setSearchUsers(allUsers);\r\n        setRowLength(allUsers.length);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        getAllUsers().then(response => {\r\n            if(isSubscribed) {\r\n                setAllUsers(response.data.usersNames);\r\n                setSearchUsers(response.data.usersNames);\r\n                setRowLength(response.data.usersNames.length);\r\n                setTableHeaders(response.data.tableHeaders);\r\n                setUserJSON(response.data.userJSON);\r\n            }  \r\n        });\r\n\r\n        return () => isSubscribed = false;  \r\n    }, []);\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Toolbar sx={{pl: { sm: 2 }, pr: { xs: 1, sm: 1 }}}>\r\n                <Typography sx={{ flex: '1 1 100%' }} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    Zaposlenici\r\n                </Typography>\r\n                {\r\n                    ( authorization === ROLES.ADMINISTRATOR ) && (\r\n                        <Box>\r\n                            <Tooltip title=\"PDF\">\r\n                                <IconButton onClick={() => exportPDF('Zaposlenici', allUsers, tableHeaders, userJSON)}>\r\n                                    <PictureAsPdfIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Link to=\"/createUser\">\r\n                                <Tooltip title=\"Dodaj\">\r\n                                    <IconButton>\r\n                                        <AddCircleOutlineRoundedIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </Link>\r\n                        </Box>\r\n                    )\r\n                }\r\n            </Toolbar>\r\n            <Box sx={{pl: { sm: 2 }, pr: { xs: 1, sm: 1 }}}>\r\n                <Search search={search} requestSearch={requestSearch} cancelSearch={cancelSearch}/>\r\n            </Box>\r\n            <TableContainer>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"left\">ID</TableCell>\r\n                            <TableCell align=\"left\">Ime i prezime</TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {searchUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                            <TableRow key={row.index} hover >\r\n                                <TableCell align=\"left\">{row.index}</TableCell>\r\n                                <TableCell align=\"left\">{row.userName}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    {\r\n                                        ( authorization === ROLES.ADMINISTRATOR ) && (\r\n                                            <Stack direction=\"row\" spacing={1} sx={{justifyContent: 'end'}}>\r\n                                                <Link to={`/profile/${row._id}`} style={{textDecoration: 'none'}}>\r\n                                                    <Button variant=\"contained\" startIcon={<RemoveRedEyeOutlinedIcon/>}>\r\n                                                        Profil\r\n                                                    </Button>\r\n                                                </Link>\r\n                                                <Link to={`/editUser/${row._id}`} style={{textDecoration: 'none'}}>\r\n                                                    <Button variant=\"contained\" color=\"warning\" startIcon={<ModeEditOutlineOutlinedIcon/>}>\r\n                                                        Promjeni\r\n                                                    </Button>\r\n                                                </Link>\r\n                                            </Stack>\r\n                                        ) \r\n                                    }\r\n                                    {\r\n                                        ( authorization === ROLES.ACCOUNTANT ) && (\r\n                                            <Stack direction=\"row\" spacing={1} sx={{justifyContent: 'end'}}>\r\n                                                <Link to={`/profileSallary/${row._id}`} style={{textDecoration: 'none'}}>\r\n                                                    <Button variant=\"contained\" startIcon={<RemoveRedEyeOutlinedIcon/>}>\r\n                                                        Profil\r\n                                                    </Button>\r\n                                                </Link>\r\n                                                <Link to={`/editUserSallary/${row._id}`} style={{textDecoration: 'none'}}>\r\n                                                    <Button variant=\"contained\" color=\"warning\" startIcon={<ModeEditOutlineOutlinedIcon/>}>\r\n                                                        Promjeni\r\n                                                    </Button>\r\n                                                </Link>\r\n                                            </Stack>\r\n                                        )\r\n                                    }\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                component=\"div\"\r\n                count={rowLength}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                rowsPerPage={rowsPerPage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                rowsPerPageOptions={[5,10]}\r\n                labelRowsPerPage={'Broj redova: '}\r\n                labelDisplayedRows={() => {\r\n                    return `${rowLength === 0 ? 0 : page * rowsPerPage + 1} - ${rowLength < rowsPerPage ? rowLength : page * rowsPerPage + rowsPerPage} od ${rowLength}`;\r\n                }}\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default UsersTable;","import axios from 'axios';\r\n\r\nconst getRoles = async () => {\r\n    try {\r\n        return await axios.get('https://tarik-diplomski.herokuapp.com/api/roles/getRoles');\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { getRoles };","import { useState, useEffect } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, TextField, Button, Typography, MenuItem, Stack, Snackbar, Alert, useMediaQuery } from '@mui/material';\r\n\r\n//APIv\r\nimport { getRoles } from '../../api/APIRoles';\r\nimport { createUser } from '../../api/APIUsers';\r\n\r\nconst CreateUserForm = () => {\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    //Role\r\n    const [roles, setRoles] = useState([{roleName: 'Zaposlenik'}]);\r\n\r\n    //Da li je kreiran \r\n    const [message, setMessage] = useState(\"\");\r\n    const [isCreated, setIsCreated] = useState(undefined);\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n\r\n    //Podaci sa forme\r\n    const [user, setUser] = useState({\r\n        firstName: '', \r\n        lastName: '',\r\n        jmbg: '',\r\n        address: '',\r\n        email: '',\r\n        position: '',\r\n        hourlyWage: 2.05,\r\n        personalDeductions: 0,\r\n        vacation: 0,\r\n        role: 'Zaposlenik'\r\n    });\r\n\r\n    //Da li postoji greška u podacima\r\n    const [bool, setBool] = useState({\r\n        firstNameBool: false, \r\n        lastNameBool: false, \r\n        jmbgBool: false, \r\n        addressBool: false,\r\n        emailBool: false, \r\n        positionBool: false,\r\n        personalDeductionsBool: false, \r\n        hourlyWageBool: false, \r\n        vacationBool: false\r\n    }); \r\n    \r\n    //Poruke o greškama\r\n    const [messages, setMessages] = useState({\r\n        firstNameError: \"\", \r\n        lastNameError: \"\", \r\n        jmbgError: \"\", \r\n        addressError: \"\",\r\n        emailError: \"\", \r\n        positionError: \"\", \r\n        personalDeductionsError: \"\",\r\n        hourlyWageError: \"\", \r\n        vacationError: \"\"\r\n    });\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        createUser(user).then((response) => {\r\n            if(response.data.isCreated === true) \r\n                setUser(response.data.user);\r\n\r\n            if(response.data.message !== '')\r\n                setOpenAlert(true);\r\n            \r\n            setMessage(response.data.message);\r\n            setIsCreated(response.data.isCreated);\r\n            setMessages(response.data.messages);\r\n            setBool(response.data.bool);\r\n        });\r\n    };\r\n\r\n    const updateField = (event) => {\r\n        setUser({\r\n            ...user,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenAlert(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        var isSubscribed = true;\r\n\r\n        getRoles().then((response) => {\r\n            if(isSubscribed)\r\n                    setRoles(response.data.roles);\r\n        });\r\n\r\n        return () => isSubscribed = false;\r\n    }, []);\r\n\r\n    return (\r\n        <Box\r\n            component=\"form\"\r\n            sx={{\r\n                ...(!matches && ({'& .MuiTextField-root': { width: '49%', paddingBottom: 3}})), \r\n                ...(matches && ({'& .MuiTextField-root': { width: '100%', paddingBottom: 2}})) \r\n            }}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    paddingTop: 1, \r\n                    paddingBottom: 3\r\n                }}\r\n            >\r\n                <Typography variant=\"h5\">\r\n                    Dodaj korisnika\r\n                </Typography>\r\n            </Box>\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    paddingTop: 1, \r\n                    ...(!matches && { display: 'flex', justifyContent: 'space-between'})\r\n                }}\r\n            >\r\n                <TextField\r\n                    name=\"firstName\" \r\n                    error={bool.firstNameBool} \r\n                    value={user.firstName} \r\n                    label=\"Ime\" \r\n                    helperText={messages.firstNameError} \r\n                    onChange={updateField}\r\n                />\r\n                <TextField \r\n                    name=\"lastName\"\r\n                    error={bool.lastNameBool} \r\n                    value={user.lastName} \r\n                    label=\"Prezime\" \r\n                    helperText={messages.lastNameError} \r\n                    onChange={updateField}\r\n                />\r\n            </Box>\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    ...(!matches && { display: 'flex', justifyContent: 'space-between'})\r\n                }}\r\n            >\r\n                <TextField\r\n                    name=\"jmbg\" \r\n                    error={bool.jmbgBool} \r\n                    value={user.jmbg} \r\n                    label=\"JMBG\" \r\n                    helperText={messages.jmbgError} \r\n                    onChange={updateField}\r\n                />\r\n                <TextField\r\n                    name=\"email\" \r\n                    error={bool.emailBool} \r\n                    value={user.email} \r\n                    label=\"Email\" \r\n                    helperText={messages.emailError} \r\n                    onChange={updateField}\r\n                />\r\n            </Box>\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    ...(!matches && { display: 'flex', justifyContent: 'space-between'})\r\n                }}\r\n            >\r\n                <TextField \r\n                    name=\"position\"\r\n                    error={bool.positionBool} \r\n                    value={user.position} \r\n                    label=\"Pozicija\" \r\n                    helperText={messages.positionError} \r\n                    onChange={updateField}\r\n                />\r\n                <TextField \r\n                    name=\"role\" \r\n                    select \r\n                    label=\"Rola\" \r\n                    value={user.role} \r\n                    onChange={updateField} \r\n                >\r\n                    {\r\n                        roles.map((value) => {\r\n                            return (\r\n                                <MenuItem key={value.roleName} value={value.roleName}>\r\n                                    {value.roleName}\r\n                                </MenuItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </TextField>\r\n            </Box>\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    ...(!matches && { display: 'flex', justifyContent: 'space-between'})\r\n                }}\r\n            >\r\n                <TextField\r\n                    name=\"hourlyWage\" \r\n                    error={bool.hourlyWageBool} \r\n                    label=\"Satnica\" \r\n                    type=\"number\" \r\n                    value={user.hourlyWage} \r\n                    inputProps={{min: 2.05, step: 0.01}} \r\n                    helperText={messages.hourlyWageError} \r\n                    onChange={updateField}\r\n                />\r\n                <TextField \r\n                    name=\"vacation\"\r\n                    error={bool.vacationBool} \r\n                    label=\"Broj dana godišnjeg\" \r\n                    type=\"number\" \r\n                    value={user.vacation} \r\n                    inputProps={{min: 0, step: 1}} \r\n                    helperText={messages.vacationError} \r\n                    onChange={updateField}\r\n                />\r\n            </Box>\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    ...(!matches && { display: 'flex', justifyContent: 'space-between'})\r\n                }}\r\n            >\r\n                <TextField\r\n                    name=\"address\" \r\n                    error={bool.addressBool} \r\n                    value={user.address} \r\n                    label=\"Adresa\" \r\n                    helperText={messages.addressError} \r\n                    onChange={updateField}\r\n                />\r\n                <TextField\r\n                    name=\"personalDeductions\" \r\n                    error={bool.personalDeductionsBool} \r\n                    label=\"Lični odbici\" \r\n                    type=\"number\" \r\n                    value={user.personalDeductions} \r\n                    inputProps={{min: 0, step: 0.01}} \r\n                    helperText={messages.personalDeductionsError} \r\n                    onChange={updateField}\r\n                />\r\n            </Box>\r\n            <Box \r\n                sx={{\r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    paddingTop: 5, \r\n                    width: '100%'\r\n                }}\r\n            >\r\n                <Button type=\"submit\" color=\"primary\" fullWidth={true} variant=\"contained\">\r\n                    Kreiraj\r\n                </Button>\r\n            </Box>\r\n            { isCreated ? (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"success\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            ) : (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"error\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            )}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default CreateUserForm;\r\n","import axios from \"axios\";\r\n\r\nconst getEmployeeStatus = async (params) => {\r\n    try {\r\n        return await axios.get(`https://tarik-diplomski.herokuapp.com/api/employeeStatus/getEmployeeStatus/${params.userId}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getStatusWithId = async (params) => {\r\n    try {\r\n        return await axios.get(`https://tarik-diplomski.herokuapp.com/api/employeeStatus/getStatusWithId/${params.statusId}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst createEmployeeStatus = async (params, employeeStatus) => {\r\n    try {\r\n        return await axios.post(`https://tarik-diplomski.herokuapp.com/api/employeeStatus/createEmployeeStatus/${params.userId}`, employeeStatus);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst editEmployeeStatus = async (params, employeeStatus) => {\r\n    try {\r\n        return await axios.put(`https://tarik-diplomski.herokuapp.com/api/employeeStatus/updateEmployeeStatus/${params.statusId}`, employeeStatus);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst deleteEmployeeStatus = async (_id) => {\r\n    try {\r\n        return await axios.delete(`https://tarik-diplomski.herokuapp.com/api/employeeStatus/deleteEmployeeStatus/${_id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { getEmployeeStatus, createEmployeeStatus, deleteEmployeeStatus, editEmployeeStatus, getStatusWithId };","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Avatar, Box, Button, Card, CardActions, CardContent, CardHeader, Divider, TableContainer, Table,\r\n    useMediaQuery, TableHead, TableRow, TextField, TableCell, TableBody, Stack\r\n} from '@mui/material';\r\nimport { blue } from '@mui/material/colors';\r\n\r\n//Icons\r\nimport ModeEditOutlineOutlinedIcon from '@mui/icons-material/ModeEditOutlineOutlined';\r\n\r\n//Api\r\nimport { getUserData } from '../../api/APIUsers';\r\nimport { getEmployeeStatus } from '../../api/APIEmployeeStatus';\r\n\r\nconst ViewProfile = () => {\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const params = useParams();\r\n\r\n    const [firstLetter, setFirstLetter] = useState(\"\");\r\n    const [employeeStatus, setEmployeeStatus] = useState([]);\r\n    const [user, setUser] = useState({\r\n        _id: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        jmbg: \"\",\r\n        address: \"\",\r\n        email: \"\",\r\n        position: \"\",\r\n        hourlyWage: 2.05,\r\n        personalDeductions: 0,\r\n        role: \"\",\r\n        vacation: 0\r\n    });\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        getUserData(params).then((response) => {\r\n            if (isSubscribed) {\r\n                setUser(response.data.user);\r\n                setFirstLetter(JSON.stringify(response.data.user.firstName).charAt(1));\r\n            }\r\n        });\r\n\r\n        getEmployeeStatus(params).then((response) => {\r\n            if (isSubscribed)\r\n                setEmployeeStatus(response.data.employeeStatus);\r\n        });\r\n\r\n        return () => isSubscribed = false;\r\n    }, [params]);\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                ...(!matches && ({ '& .MuiCard-root': { width: '49%' }, display: 'flex', justifyContent: 'space-between' })),\r\n                ...(matches && ({ '& .MuiCard-root': { width: '100%' }, display: 'grid', gridTemplateRows: 'auto' })),\r\n            }}\r\n        >\r\n            <Card>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar sx={{ bgcolor: blue[600] }} aria-label=\"recipe\">\r\n                            {firstLetter}\r\n                        </Avatar>\r\n                    }\r\n                    title={user.firstName + \" \" + user.lastName}\r\n                    subheader={user.position}\r\n                />\r\n                <Divider variant='middle' />\r\n                <CardContent>\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Ime\" variant=\"standard\" value={user.firstName} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Prezime\" variant=\"standard\" value={user.lastName} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Email\" variant=\"standard\" value={user.email} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"JMBG\" variant=\"standard\" value={user.jmbg} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Adresa\" variant=\"standard\" value={user.address} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Radno mjesto\" variant=\"standard\" value={user.position} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Broj dana godišnjeg\" variant=\"standard\" value={user.vacation} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Lični odbici\" variant=\"standard\" value={`${user.personalDeductions} KM`} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Satnica\" variant=\"standard\" value={`${user.hourlyWage} KM`} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Rola\" variant=\"standard\" value={user.role} />\r\n                </CardContent>\r\n                <CardActions disableSpacing sx={{ textAlign: 'end' }}>\r\n                    <Stack direction='column' spacing={2} sx={{ width: \"100%\" }}>\r\n                        <Link to={`/editUser/${params.userId}`} style={{ textDecoration: 'none', width: '100%' }} >\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"warning\"\r\n                                fullWidth={true}\r\n                                startIcon={<ModeEditOutlineOutlinedIcon />}\r\n                            >\r\n                                Promjeni\r\n                            </Button>\r\n                        </Link>\r\n                    </Stack>\r\n                </CardActions>\r\n            </Card>\r\n            <Box sx={{\r\n                ...(matches && ({ paddingTop: 5, width: '100%' })),\r\n                ...(!matches && ({ paddingTop: 2, width: '49%' }))\r\n            }}\r\n            >\r\n                <TableContainer>\r\n                    <Table stickyHeader>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='center' colSpan={3}>\r\n                                    Status zaposlenika\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell align='center'>\r\n                                    Id\r\n                                </TableCell>\r\n                                <TableCell align='center'>\r\n                                    Status\r\n                                </TableCell>\r\n                                <TableCell align='center'>\r\n                                    Datum\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {employeeStatus.map((value, index) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell align='center'>\r\n                                        {index + 1}\r\n                                    </TableCell>\r\n                                    <TableCell align='center'>\r\n                                        {value.status}\r\n                                    </TableCell>\r\n                                    <TableCell align='center'>\r\n                                        {`\r\n                                                ${new Date(value.dateStatusChange).toLocaleDateString()}\r\n                                            `}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Box sx={{\r\n                    width: '100%',\r\n                    paddingTop: 3\r\n                }}\r\n                >\r\n                    <Link to={`/employeeStatus/${params.userId}`} style={{ textDecoration: 'none' }}>\r\n                        <Button variant=\"contained\" sx={{\r\n                            ...(matches && ({ width: '100%' })),\r\n                            ...(!matches && ({ marginRight: 0.5, width: '49%' }))\r\n                        }}\r\n                        >\r\n                            Vidi sve\r\n                        </Button>\r\n                    </Link>\r\n                    <Link to={`/createEmployeeStatus/${params.userId}`} style={{ textDecoration: 'none' }}>\r\n                        <Button variant=\"contained\" color=\"success\" sx={{\r\n                            ...(matches && ({ width: '100%', marginTop: 1 })),\r\n                            ...(!matches && ({ width: '49%' }))\r\n                        }}\r\n                        >\r\n                            Dodaj\r\n                        </Button>\r\n                    </Link>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ViewProfile;\r\n","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Avatar, Box, Button, Card, CardActions, CardContent, CardHeader, Divider, Stack, TextField } from '@mui/material';\r\nimport { blue } from '@mui/material/colors';\r\n\r\n//Icons\r\nimport ModeEditOutlineOutlinedIcon from '@mui/icons-material/ModeEditOutlineOutlined';\r\n\r\n//Api\r\nimport { getUserData } from '../../api/APIUsers';\r\n\r\nconst ViewProfileSallary = () => {\r\n    const params = useParams();\r\n\r\n    const [firstLetter, setFirstLetter] = useState(\"\");\r\n    const [user, setUser] = useState({\r\n        _id: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        jmbg: \"\",\r\n        address: \"\",\r\n        email: \"\",\r\n        position: \"\",\r\n        hourlyWage: 2.05,\r\n        personalDeductions: 0,\r\n        role: \"\",\r\n        vacation: 0\r\n    });\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        getUserData(params).then((response) => {\r\n            if (isSubscribed) {\r\n                setUser(response.data.user);\r\n                setFirstLetter(JSON.stringify(response.data.user.firstName).charAt(1));\r\n            }\r\n        });\r\n\r\n        return () => isSubscribed = false;\r\n    }, [params]);\r\n    \r\n    return (\r\n        <Box>\r\n            <Card>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar sx={{ bgcolor: blue[600] }} aria-label=\"recipe\">\r\n                            {firstLetter}\r\n                        </Avatar>\r\n                    }\r\n                    title={user.firstName + \" \" + user.lastName}\r\n                    subheader={user.position}\r\n                />\r\n                <Divider variant='middle' />\r\n                <CardContent>\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Ime\" variant=\"standard\" value={user.firstName} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Prezime\" variant=\"standard\" value={user.lastName} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Email\" variant=\"standard\" value={user.email} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"JMBG\" variant=\"standard\" value={user.jmbg} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Adresa\" variant=\"standard\" value={user.address} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Radno mjesto\" variant=\"standard\" value={user.position} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Broj dana godišnjeg\" variant=\"standard\" value={user.vacation} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Lični odbici\" variant=\"standard\" value={`${user.personalDeductions} KM`} />\r\n                    <TextField sx={{ paddingBottom: 2 }} disabled fullWidth label=\"Satnica\" variant=\"standard\" value={`${user.hourlyWage} KM`} />\r\n                </CardContent>\r\n                <CardActions disableSpacing sx={{ textAlign: 'end' }}>\r\n                    <Stack direction='column' spacing={2} sx={{ width: \"100%\" }}>\r\n                        <Link to={`/editUserSallary/${params.userId}`} style={{ textDecoration: 'none', width: '100%' }} >\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"warning\"\r\n                                fullWidth={true}\r\n                                startIcon={<ModeEditOutlineOutlinedIcon />}\r\n                            >\r\n                                Promjeni\r\n                            </Button>\r\n                        </Link>\r\n                    </Stack>\r\n                </CardActions>\r\n            </Card>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ViewProfileSallary;","import { Dialog , DialogTitle , DialogContent , DialogContentText , DialogActions , Button } from '@mui/material';\r\n\r\n//Api\r\nimport { resetPassword } from '../../../api/APIPassword';\r\n\r\nconst RefreshPasswordModal = (props) => {\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const id = props._id;\r\n        const email = {\r\n            email: props.email\r\n        };\r\n\r\n        resetPassword(id, email).then((response) => {\r\n            props.handleCloseModal(response.data.message);\r\n            props.changePassword(response.data);\r\n        });\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.handleCloseModal(\"\");\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.openModal} onClose={handleClose}>\r\n            <DialogTitle>Promjena lozinke</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Da li ste sigurni da želite da restartujete lozinku korisniku {props.firstName} {props.lastName}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color='error'>Odustani</Button>\r\n                <Button onClick={handleSubmit}>Resetuj</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default RefreshPasswordModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, TextField, Button, Typography, MenuItem, Stack, Snackbar, Alert, useMediaQuery } from '@mui/material';\r\n\r\n//Api\r\nimport { getRoles } from '../../api/APIRoles';\r\nimport { getUserData, changeUser } from '../../api/APIUsers';\r\n\r\n//Components\r\nimport RefreshPasswordModal from './Modals/RefreshPasswordModal';\r\n\r\nconst EditUserForm = () => {\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const params = useParams();\r\n\r\n    //Role \r\n    const [roles, setRoles] = useState([{roleName: 'Zaposlenik'}]);\r\n\r\n    //Da li je editovan \r\n    const [message, setMessage] = useState(\"\");\r\n    const [isEdit, setIsEdit] = useState(undefined);\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n\r\n    //Da li je resetovana lozinka\r\n    const [success, setSuccess] = useState(undefined);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [resetPasswordMessage, setResetPasswordMessage] = useState(\"\");\r\n\r\n    //Podaci sa forme\r\n    const [user, setUser] = useState({\r\n        firstName: '', \r\n        lastName: '',\r\n        jmbg: '',\r\n        address: '',\r\n        email: '',\r\n        position: '',\r\n        personalDeductions: 0,\r\n        hourlyWage: 2.05,\r\n        vacation: 0,\r\n        role: 'Zaposlenik'\r\n    });\r\n\r\n    //Da li postoji greška u podacima\r\n    const [bool, setBool] = useState({\r\n        firstNameBool: false, \r\n        lastNameBool: false, \r\n        jmbgBool: false, \r\n        addressBool: false,\r\n        emailBool: false, \r\n        positionBool: false,\r\n        personalDeductions: false, \r\n        hourlyWageBool: false, \r\n        vacationBool: false\r\n    }); \r\n    \r\n    //Poruke o greškama\r\n    const [messages, setMessages] = useState({\r\n        firstNameError: \"\", \r\n        lastNameError: \"\", \r\n        jmbgError: \"\", \r\n        addressError: \"\",\r\n        emailError: \"\", \r\n        positionError: \"\", \r\n        hourlyWageError: \"\",\r\n        personalDeductionsError: \"\", \r\n        vacationError: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        getRoles().then((response) => {\r\n            if(isSubscribed) {\r\n                setRoles(response.data.roles);\r\n                getUserData(params).then((userData) => {\r\n                    if(isSubscribed) \r\n                        setUser(userData.data.user);\r\n                })\r\n            }\r\n        }); \r\n\r\n        return () => isSubscribed = false;\r\n    }, [params]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        changeUser(user, params).then((response) => {\r\n            if(response.data.message !== '')\r\n                setOpenAlert(true);\r\n            \r\n            if(response.data.isEdit === false) \r\n                setUser(response.data.user);\r\n            \r\n            setMessage(response.data.message);\r\n            setIsEdit(response.data.isEdit);\r\n            setMessages(response.data.messages);\r\n            setBool(response.data.bool);\r\n        })\r\n    };\r\n\r\n    const updateField = (event) => {\r\n        setUser({\r\n            ...user,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenAlert(false);\r\n    };\r\n\r\n    const handleOpenModal = () => {\r\n        setOpenModal(true);\r\n    };\r\n\r\n    const handleCloseModal = (message) => {\r\n        if(message === \"\") {\r\n            setResetPasswordMessage(\"\");\r\n            setOpenAlert(false);\r\n        }\r\n        else \r\n            setOpenAlert(true);\r\n        \r\n        setOpenModal(false);\r\n    };\r\n\r\n    const changePassword = (data) => {\r\n        setResetPasswordMessage(data.message);\r\n        setSuccess(data.success);\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            component=\"form\"\r\n            sx={{\r\n                ...(!matches && ({'& .MuiTextField-root': { width: '49%', paddingBottom: 3}})), \r\n                ...(matches && ({'& .MuiTextField-root': { width: '100%', paddingBottom: 2}})) \r\n            }}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    paddingTop: 1, \r\n                    paddingBottom: 3\r\n                }}\r\n            >\r\n                <Typography variant=\"h5\">\r\n                    Promjeni korisnika\r\n                </Typography>\r\n            </Box>\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    paddingTop: 1, \r\n                    ...(!matches && { display: 'flex', justifyContent: 'space-between'})\r\n                }}\r\n            >\r\n                <TextField \r\n                    name=\"firstName\" \r\n                    error={bool.firstNameBool} \r\n                    value={user.firstName} \r\n                    label=\"Ime\" \r\n                    helperText={messages.firstNameError} \r\n                    onChange={updateField}\r\n                />\r\n                <TextField \r\n                    name=\"lastName\" \r\n                    error={bool.lastNameBool}  \r\n                    value={user.lastName} \r\n                    label=\"Prezime\" \r\n                    helperText={messages.lastNameError} \r\n                    onChange={updateField}\r\n                />\r\n            </Box>\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    ...(!matches && { display: 'flex', justifyContent: 'space-between'})\r\n                }}\r\n            >\r\n                <TextField \r\n                    name=\"jmbg\"\r\n                    error={bool.jmbgBool} \r\n                    value={user.jmbg} \r\n                    label=\"JMBG\"  \r\n                    helperText={messages.jmbgError} \r\n                    onChange={updateField}\r\n                />\r\n                <TextField \r\n                    name=\"email\"\r\n                    error={bool.emailBool} \r\n                    value={user.email} \r\n                    label=\"Email\" \r\n                    helperText={messages.emailError} \r\n                    onChange={updateField}\r\n                />\r\n            </Box>\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    ...(!matches && { display: 'flex', justifyContent: 'space-between'})\r\n                }}\r\n            >\r\n                <TextField \r\n                    name=\"position\"\r\n                    error={bool.positionBool} \r\n                    value={user.position} \r\n                    label=\"Pozicija\" \r\n                    helperText={messages.positionError} \r\n                    onChange={updateField}\r\n                />\r\n                <TextField \r\n                    name=\"role\" \r\n                    select \r\n                    label=\"Rola\" \r\n                    value={user.role} \r\n                    onChange={updateField} \r\n                >\r\n                    {\r\n                        roles.map((value) => {\r\n                            return (\r\n                                <MenuItem key={value.roleName} value={value.roleName}>\r\n                                    {value.roleName}\r\n                                </MenuItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </TextField>\r\n            </Box>\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    ...(!matches && { display: 'flex', justifyContent: 'space-between'})\r\n                }}\r\n            >\r\n                <TextField \r\n                    label=\"Satnica\"\r\n                    error={bool.hourlyWageBool} \r\n                    type=\"number\" \r\n                    name=\"hourlyWage\"\r\n                    value={user.hourlyWage} \r\n                    inputProps={{min: 2.05, step: 0.01}} \r\n                    helperText={messages.hourlyWageError} \r\n                    onChange={updateField}\r\n                />\r\n                <TextField \r\n                    label=\"Broj dana godišnjeg\"\r\n                    error={bool.vacationBool} \r\n                    type=\"number\" \r\n                    name=\"vacation\" \r\n                    value={user.vacation} \r\n                    inputProps={{min: 0, step: 1}} \r\n                    helperText={messages.vacationError} \r\n                    onChange={updateField}\r\n                />\r\n            </Box>\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    ...(!matches && { display: 'flex', justifyContent: 'space-between'})\r\n                }}\r\n            >\r\n                <TextField \r\n                    name=\"address\"\r\n                    error={bool.addressBool} \r\n                    value={user.address} \r\n                    label=\"Adresa\" \r\n                    helperText={messages.addressError} \r\n                    onChange={updateField}\r\n                />\r\n                <TextField \r\n                    label=\"Lični odbici\"\r\n                    error={bool.personalDeductionsBool} \r\n                    type=\"number\" \r\n                    name=\"personalDeductions\"\r\n                    value={user.personalDeductions} \r\n                    inputProps={{min: 0, step: 0.01}} \r\n                    helperText={messages.personalDeductionsError} \r\n                    onChange={updateField}\r\n                />\r\n            </Box>\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    ...(!matches && { display: 'flex', justifyContent: 'space-between'})\r\n                }}\r\n            >\r\n                <Button \r\n                    sx={{\r\n                        ...(!matches && ({width: '49%'})), \r\n                        ...(matches && ({width: '100%', marginBottom: 1})), \r\n                        height: 55\r\n                    }} \r\n                    type=\"button\" \r\n                    color=\"error\" \r\n                    fullWidth={false} \r\n                    variant=\"contained\" \r\n                    onClick={handleOpenModal}\r\n                >\r\n                    Restartuj lozinku\r\n                </Button>\r\n                <Button \r\n                    sx={{\r\n                        ...(!matches && ({width: '49%'})), \r\n                        ...(matches && ({width: '100%'})), \r\n                        height: 55\r\n                    }} \r\n                    type=\"submit\" \r\n                    color=\"primary\" \r\n                    fullWidth={false} \r\n                    variant=\"contained\"\r\n                >\r\n                    Promjeni\r\n                </Button>\r\n            </Box>\r\n            { isEdit ? (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"success\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            ) : (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"error\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            )}\r\n            { success === true && (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"success\">\r\n                            {resetPasswordMessage}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            )}\r\n            <RefreshPasswordModal \r\n                _id={params.userId} \r\n                email={user.email}\r\n                firstName={user.firstName}\r\n                lastName={user.lastName}\r\n                openModal={openModal} \r\n                handleCloseModal={handleCloseModal} \r\n                changePassword={changePassword}\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default EditUserForm;","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, TextField, Button, Typography, Stack, Snackbar, Alert, useMediaQuery } from '@mui/material';\r\n\r\n//Api\r\nimport { getUserData, changeUserSallary } from '../../api/APIUsers';\r\n\r\nconst EditUserFormSallary = () => {\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const params = useParams();\r\n\r\n    //Da li je editovan \r\n    const [message, setMessage] = useState(\"\");\r\n    const [isEdit, setIsEdit] = useState(undefined);\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n\r\n\r\n    //Podaci sa forme\r\n    const [user, setUser] = useState({\r\n        firstName: '', \r\n        lastName: '',\r\n        jmbg: '',\r\n        address: '',\r\n        email: '',\r\n        position: '',\r\n        personalDeductions: 0,\r\n        hourlyWage: 2.05,\r\n        vacation: 0,\r\n        role: 'Zaposlenik'\r\n    });\r\n\r\n    //Da li postoji greška u podacima\r\n    const [bool, setBool] = useState({\r\n        firstNameBool: false, \r\n        lastNameBool: false, \r\n        jmbgBool: false, \r\n        addressBool: false,\r\n        emailBool: false, \r\n        positionBool: false,\r\n        personalDeductions: false, \r\n        hourlyWageBool: false, \r\n        vacationBool: false\r\n    }); \r\n    \r\n    //Poruke o greškama\r\n    const [messages, setMessages] = useState({\r\n        firstNameError: \"\", \r\n        lastNameError: \"\", \r\n        jmbgError: \"\", \r\n        addressError: \"\",\r\n        emailError: \"\", \r\n        positionError: \"\", \r\n        hourlyWageError: \"\",\r\n        personalDeductionsError: \"\", \r\n        vacationError: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        getUserData(params).then((userData) => {\r\n            if(isSubscribed) \r\n                setUser(userData.data.user);\r\n        });\r\n        \r\n        return () => isSubscribed = false;\r\n    }, [params]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        changeUserSallary(user, params).then((response) => {\r\n            if(response.data.message !== '')\r\n                setOpenAlert(true);\r\n            \r\n            if(response.data.isEdit === false) \r\n                setUser(response.data.user);\r\n            \r\n            setMessage(response.data.message);\r\n            setIsEdit(response.data.isEdit);\r\n            setMessages(response.data.messages);\r\n            setBool(response.data.bool);\r\n        })\r\n    };\r\n\r\n    const updateField = (event) => {\r\n        setUser({\r\n            ...user,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenAlert(false);\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            component=\"form\"\r\n            sx={{\r\n                ...(!matches && ({'& .MuiTextField-root': { width: '49%', paddingBottom: 3}})), \r\n                ...(matches && ({'& .MuiTextField-root': { width: '100%', paddingBottom: 2}})) \r\n            }}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    paddingTop: 1, \r\n                    paddingBottom: 3\r\n                }}\r\n            >\r\n                <Typography variant=\"h5\">\r\n                    Promjeni korisnika\r\n                </Typography>\r\n            </Box>\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    paddingTop: 1, \r\n                    ...(!matches && { display: 'flex', justifyContent: 'space-between'})\r\n                }}\r\n            >\r\n                <TextField \r\n                    name=\"firstName\" \r\n                    error={bool.firstNameBool} \r\n                    value={user.firstName} \r\n                    label=\"Ime\" \r\n                    disabled\r\n                    helperText={messages.firstNameError} \r\n                    onChange={updateField}\r\n                />\r\n                <TextField \r\n                    name=\"lastName\" \r\n                    error={bool.lastNameBool}  \r\n                    value={user.lastName} \r\n                    label=\"Prezime\" \r\n                    disabled\r\n                    helperText={messages.lastNameError} \r\n                    onChange={updateField}\r\n                />\r\n            </Box>\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1, \r\n                    ...(!matches && { display: 'flex', justifyContent: 'space-between'})\r\n                }}\r\n            >\r\n                <TextField \r\n                    label=\"Satnica\"\r\n                    error={bool.hourlyWageBool} \r\n                    type=\"number\" \r\n                    name=\"hourlyWage\"\r\n                    value={user.hourlyWage} \r\n                    inputProps={{min: 2.05, step: 0.01}} \r\n                    helperText={messages.hourlyWageError} \r\n                    onChange={updateField}\r\n                />\r\n                <TextField \r\n                    label=\"Lični odbici\"\r\n                    error={bool.personalDeductionsBool} \r\n                    type=\"number\" \r\n                    name=\"personalDeductions\"\r\n                    value={user.personalDeductions} \r\n                    inputProps={{min: 0, step: 0.01}} \r\n                    helperText={messages.personalDeductionsError} \r\n                    onChange={updateField}\r\n                />\r\n            </Box>\r\n            <Box \r\n                sx={{\r\n                    width: \"100%\",\r\n                    paddingLeft: 1, \r\n                    paddingRight: 1\r\n                }}\r\n            >\r\n                <Button \r\n                    fullWidth\r\n                    type=\"submit\" \r\n                    color=\"primary\" \r\n                    variant=\"contained\"\r\n                >\r\n                    Promjeni\r\n                </Button>\r\n            </Box>\r\n            { isEdit ? (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"success\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            ) : (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"error\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            )}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default EditUserFormSallary;","import { useState, useEffect } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, Stack } from '@mui/material';\r\n\r\n//API\r\nimport { changeUserWorkingHours } from '../../../api/APIUsers';\r\n\r\nconst EditUsersWorkingHoursModal = (props) => {\r\n    const [workingHourFrom, setWorkingHourFrom] = useState(props.workingHourFrom);\r\n    const [workingHourTo, setWorkingHourTo] = useState(props.workingHourTo);\r\n    const [messageFrom, setMessageFrom] = useState('Minuti mogu biti samo na pola sata, tipa 08:30 ili 09:00');\r\n    const [errorFrom, setErrorFrom] = useState(false);\r\n    const [messageTo, setMessageTo] = useState('Minuti mogu biti samo na pola sata, tipa 08:30 ili 09:00');\r\n    const [errorTo, setErrorTo] = useState(false);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const workingHour = {\r\n            _id: props._id, \r\n            workingHourFrom: workingHourFrom, \r\n            workingHourTo: workingHourTo,\r\n        }\r\n\r\n        changeUserWorkingHours(workingHour).then((response) => {\r\n            if(response.data.isEdit === true) {\r\n                props.handleCloseModal(response.data.message, response.data.isEdit, workingHourFrom, workingHourTo, props.index);\r\n                setMessageFrom('Minuti mogu biti samo na pola sata, tipa 08:30 ili 09:00');\r\n                setMessageTo('Minuti mogu biti samo na pola sata, tipa 08:30 ili 09:00');\r\n                setErrorFrom(false);\r\n                setErrorTo(false);\r\n            }\r\n                \r\n            else {\r\n                setMessageFrom(response.data.messageFrom);\r\n                setMessageTo(response.data.messageTo);\r\n                setErrorFrom(response.data.isEditFrom);\r\n                setErrorTo(response.data.isEditTo);\r\n                setWorkingHourFrom(props.workingHourFrom);\r\n                setWorkingHourTo(props.workingHourTo);\r\n            }\r\n            \r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setWorkingHourFrom(props.workingHourFrom);\r\n        setWorkingHourTo(props.workingHourTo);\r\n    }, [props.workingHourFrom, props.workingHourTo]);\r\n\r\n    const handleClose = () => {\r\n        setMessageFrom('Minuti mogu biti samo na pola sata, tipa 08:30 ili 09:00');\r\n        setMessageTo('Minuti mogu biti samo na pola sata, tipa 08:30 ili 09:00');\r\n        setErrorFrom(false);\r\n        setErrorTo(false);\r\n        props.handleCloseModal(\"\", undefined, props.workingHourFrom, props.workingHourTo, props.index);\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.openModal} fullWidth={true} onClose={handleClose}>\r\n            <DialogTitle>Promjena radnog vremena</DialogTitle>\r\n            <DialogContent>\r\n                <TextField \r\n                    autoFocus\r\n                    focused\r\n                    disabled\r\n                    margin='dense'\r\n                    label=\"Ime i prezime\"\r\n                    value={props.userName}\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                />\r\n                <TextField \r\n                    onChange={(e) => setWorkingHourFrom(e.target.value)}\r\n                    focused\r\n                    error={errorFrom}\r\n                    helperText={messageFrom}\r\n                    margin=\"dense\"\r\n                    label=\"Radno vrijeme od\"\r\n                    value={workingHourFrom}\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                />\r\n                <TextField \r\n                    onChange={(e) => setWorkingHourTo(e.target.value)}\r\n                    focused\r\n                    error={errorTo}\r\n                    helperText={messageTo}\r\n                    margin=\"dense\"\r\n                    label=\"Radno vrijeme do\"\r\n                    value={workingHourTo}\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Stack direction=\"row\" spacing={2}>\r\n                    <Button onClick={handleClose} color='error'>Odustani</Button>\r\n                    <Button onClick={handleSubmit}>Promjeni</Button>\r\n                </Stack>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default EditUsersWorkingHoursModal;","import { useEffect, useState, useRef } from 'react';\r\nimport { Box, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Toolbar, Typography, IconButton, Tooltip, Button, Stack, TablePagination, Snackbar, Alert, } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Icons\r\nimport ModeEditOutlineOutlinedIcon from '@mui/icons-material/ModeEditOutlineOutlined';\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\nimport AddCircleOutlineRounded from '@mui/icons-material/AddCircleOutlineRounded';\r\n\r\n//Componenets\r\nimport Search from '../Search';\r\n\r\n//API\r\nimport { getAllUsersWorkingHours } from '../../api/APIUsers';\r\n\r\n//PDF table of users\r\nimport { exportPDF } from '../../helpers/ExportToPDF';\r\n\r\n//Modals\r\nimport EditUsersWorkingHoursModal from './Modals/EditUsersWorkingHoursModal';\r\n\r\nconst UsersWorkingHoursTable = () => {\r\n    //Svi korisnici\r\n    const [allUsersWorkingHours, setAllUsersWorkingHours] = useState([]);\r\n    const userData = useRef({_id: \"\", index: 0, userName: \"\", workingHourFrom: 0, workingHourTo: 0});\r\n\r\n    //Za kreiranje tabele u pdfu\r\n    const [tableHeaders, setTableHeaders] = useState([[]]);\r\n    const [userJSON, setUserJSON] = useState([]);\r\n\r\n    //Pretraživanje\r\n    const [search, setSearch] = useState('');\r\n    const [searchUsers, setSearchUsers] = useState([]);\r\n\r\n    //Broj redova u tabeli po stranici\r\n    const [page, setPage] = useState(0);\r\n    const [rowLength, setRowLength] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n    //Modal\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const [isEdit, setIsEdit] = useState(undefined);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value));\r\n        setPage(0);\r\n    };\r\n\r\n    const requestSearch = (searchedVal) => {\r\n        setSearch(searchedVal.target.value)\r\n        \r\n        const filteredUsers = allUsersWorkingHours.filter((user) => {\r\n            return user.userName.toLowerCase().includes(searchedVal.target.value.toLowerCase()) ? user : null;\r\n        });\r\n        \r\n        setSearchUsers(filteredUsers);\r\n        setRowLength(filteredUsers.length);\r\n    };\r\n    \r\n    const cancelSearch = () => {\r\n        setSearch('');\r\n        setSearchUsers(allUsersWorkingHours);\r\n        setRowLength(allUsersWorkingHours.length);\r\n    };\r\n    \r\n    const handleOpenModal = (row) => {\r\n        userData.current = row;\r\n        setOpenModal(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        getAllUsersWorkingHours().then(response => {\r\n            if(isSubscribed) {\r\n                setAllUsersWorkingHours(response.data.usersNames);\r\n                setSearchUsers(response.data.usersNames);\r\n                setRowLength(response.data.usersNames.length);\r\n                setTableHeaders(response.data.tableHeaders);\r\n                setUserJSON(response.data.userJSON);\r\n            }  \r\n        });\r\n\r\n        return () => isSubscribed = false;  \r\n    }, []);\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenAlert(false);\r\n    };\r\n\r\n    const handleCloseModal = (message, isEdit, workingHourFrom, workingHourTo, index) => {     \r\n        setMessage(message);\r\n        setIsEdit(isEdit);   \r\n        setOpenAlert(true);\r\n        setOpenModal(false);\r\n        allUsersWorkingHours.forEach((user) => {\r\n            if(user.index === index) {\r\n                user.workingHourFrom = workingHourFrom;\r\n                user.workingHourTo = workingHourTo;\r\n            }   \r\n        })\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Toolbar sx={{pl: { sm: 2 }, pr: { xs: 1, sm: 1 }}}>\r\n                <Typography sx={{ flex: '1 1 100%' }} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    Radno vrijeme\r\n                </Typography>\r\n                <Link to=\"/workingReport\">\r\n                    <Tooltip title=\"Lista\">\r\n                        <IconButton>\r\n                            <AddCircleOutlineRounded />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Link>\r\n                <Tooltip title=\"PDF\">\r\n                    <IconButton onClick={() => exportPDF('Radno vrijeme', allUsersWorkingHours, tableHeaders, userJSON)}>\r\n                        <PictureAsPdfIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n            <Box sx={{pl: { sm: 2 }, pr: { xs: 1, sm: 1 }}}>\r\n                <Search search={search} requestSearch={requestSearch} cancelSearch={cancelSearch}/>\r\n            </Box>\r\n            <TableContainer>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"left\">ID</TableCell>\r\n                            <TableCell align=\"left\">Ime i prezime</TableCell>\r\n                            <TableCell align=\"left\">Radno vrijeme od</TableCell>\r\n                            <TableCell align=\"left\">Radno vrijeme do</TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {searchUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                            <TableRow key={row.index} hover >\r\n                                <TableCell align=\"left\">{row.index}</TableCell>\r\n                                <TableCell align=\"left\">{row.userName}</TableCell>\r\n                                <TableCell align=\"left\">{row.workingHourFrom}</TableCell>\r\n                                <TableCell align=\"left\">{row.workingHourTo}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Stack direction=\"row\" spacing={1} sx={{justifyContent: 'end'}}>\r\n                                        <Link to={`/userWorkingHours/${row._id}`} style={{textDecoration: 'none'}}>\r\n                                            <Button variant=\"contained\" color=\"primary\" startIcon={<PictureAsPdfIcon/>} >\r\n                                                Izvještaji\r\n                                            </Button>\r\n                                        </Link>\r\n                                        <Button variant=\"contained\" color=\"warning\" startIcon={<ModeEditOutlineOutlinedIcon/>} onClick={() => {\r\n                                            handleOpenModal(row)\r\n                                        }}>\r\n                                            Promjeni\r\n                                        </Button>\r\n                                    </Stack>\r\n                                    <EditUsersWorkingHoursModal \r\n                                        index={userData.current.index}\r\n                                        _id={userData.current._id} \r\n                                        userName={userData.current.userName}\r\n                                        workingHourFrom={userData.current.workingHourFrom}\r\n                                        workingHourTo={userData.current.workingHourTo}\r\n                                        openModal={openModal} \r\n                                        handleCloseModal={handleCloseModal} \r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                component=\"div\"\r\n                count={rowLength}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                rowsPerPage={rowsPerPage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                rowsPerPageOptions={[5,10]}\r\n                labelRowsPerPage={'Broj redova: '}\r\n                labelDisplayedRows={() => {\r\n                    return `${rowLength === 0 ? 0 : page * rowsPerPage + 1} - ${rowLength < rowsPerPage ? rowLength : page * rowsPerPage + rowsPerPage} od ${rowLength}`;\r\n                }}\r\n            />\r\n            { isEdit === true && (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"success\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            )}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default UsersWorkingHoursTable;","import { useState } from 'react';\r\nimport { Avatar, Box, Button, Card, CardActions, CardContent, CardHeader, Divider, TextField, Typography, IconButton, Stack, Snackbar, Alert } from '@mui/material';\r\nimport { blue } from '@mui/material/colors';\r\nimport { MobileDatePicker, LocalizationProvider } from \"@mui/lab\";\r\nimport DateAdapter from '@mui/lab/AdapterMoment'\r\nimport moment from \"moment\";\r\nimport \"moment/locale/sr\";\r\n\r\n//Icons\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\n\r\n//Api\r\nimport { getWorkingReportForAllUsers, getWholeWorkingReportForAllUsers } from '../../api/APIStatusRecord';\r\n\r\n//PDF table \r\nimport { exportPDF } from '../../helpers/ExportToPDF';\r\n\r\n//Css\r\nimport './UserWorkingHours.css'\r\n\r\nconst WorkingHoursReport = () => {\r\n    const [date, setDate] = useState(moment(\"01/01/2022\", \"DD/MM/YYYY\"));\r\n\r\n    //Alert\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(undefined);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenAlert(false);\r\n    }\r\n\r\n    const submitMonthReport = async (event) => {\r\n        event.preventDefault();\r\n\r\n        getWorkingReportForAllUsers(date.format('MM'), date.format('YYYY')).then(response => {\r\n            if(response.data.isEdit)\r\n                exportPDF(`Izvještaj za ${date.format('MMMM')}/${date.format('YYYY')}`, response.data.status, response.data.tableHeaders, response.data.statusJSON);\r\n\r\n            setOpenAlert(true);\r\n            setMessage(response.data.message);\r\n            setIsEdit(response.data.isEdit);\r\n            setDate(moment(\"01/01/2022\", \"DD/MM/YYYY\"));\r\n        });\r\n    }\r\n\r\n    const submitWholeReport = async (event) => {\r\n        event.preventDefault();\r\n\r\n        getWholeWorkingReportForAllUsers().then(response => {\r\n            if(response.data.isEdit)\r\n                exportPDF(`Kompletni izvještaj`, response.data.status, response.data.tableHeaders, response.data.statusJSON);\r\n\r\n            setOpenAlert(true);\r\n            setMessage(response.data.message);\r\n            setIsEdit(response.data.isEdit);\r\n            setDate(moment(\"01/01/2022\", \"DD/MM/YYYY\"));\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Card>\r\n                <CardHeader \r\n                    avatar={\r\n                        <Avatar sx={{ bgcolor: blue[600] }} aria-label=\"recipe\">\r\n                            <IconButton>\r\n                                <PictureAsPdfIcon />\r\n                            </IconButton>\r\n                        </Avatar>\r\n                    }\r\n                    title={\"Izvještaj\"}\r\n                    subheader={\"Radni izvještaj za sve uposlenike.\"} \r\n                />\r\n                <Divider variant='middle'/>\r\n                <CardContent>   \r\n                    <LocalizationProvider dateAdapter={DateAdapter} locale={\"sr\"} >\r\n                        <Box>\r\n                            <Typography sx={{marginBottom: 1, marginTop: 1}}>Odaberite mjesec i godinu</Typography>\r\n                            <MobileDatePicker \r\n                                minDate={moment(\"01/01/2022\", \"DD/MM/YYYY\")}\r\n                                maxDate={moment(new Date(), \"DD/MM/YYYY\")}\r\n                                views={['year', 'month']}\r\n                                toolbarTitle=\"Izaberite datum\"\r\n                                cancelText=\"Odustani\"\r\n                                inputFormat=\"DD/MM/YYYY\"\r\n                                value={date}\r\n                                mask=\"__/__/____\"\r\n                                onChange={(dateChanged) => {\r\n                                    return setDate(moment(dateChanged));\r\n                                }}\r\n                                renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                            />\r\n                        </Box>\r\n                    </LocalizationProvider>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Stack direction=\"column\" spacing={1} sx={{width: \"100%\"}}>\r\n                        <Button variant='contained' color='primary' fullWidth={true} onClick={submitMonthReport}>\r\n                            Generiši izvještaj za ovaj mjesec\r\n                        </Button>\r\n                        <Button variant='contained' color='primary' fullWidth={true} onClick={submitWholeReport}>\r\n                            Generiši izvještaj\r\n                        </Button>\r\n                    </Stack>\r\n                </CardActions>\r\n            </Card>\r\n            { isEdit ? (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"success\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            ) : (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"error\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            )}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default WorkingHoursReport;","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Avatar, Box, Button, Card, CardActions, CardContent, CardHeader, Divider, Typography, TextField, Stack, Snackbar, Alert } from '@mui/material';\r\nimport { blue } from '@mui/material/colors';\r\nimport { MobileDatePicker, LocalizationProvider } from \"@mui/lab\";\r\nimport DateAdapter from '@mui/lab/AdapterMoment'\r\nimport moment from \"moment\";\r\nimport \"moment/locale/sr\";\r\n\r\n//Api\r\nimport { getUserData } from '../../api/APIUsers';\r\nimport { getWorkingReport, getWholeWorkingReport } from '../../api/APIStatusRecord';\r\n\r\n//PDF table \r\nimport { exportPDF } from '../../helpers/ExportToPDF';\r\n\r\n//Css\r\nimport './UserWorkingHours.css'\r\n\r\nconst UserWorkingHoursReport = () => {\r\n    const [date, setDate] = useState(moment(\"01/01/2022\", \"DD/MM/YYYY\"));\r\n    const [firstLetter, setFirstLetter] = useState(\"\");\r\n    const [user, setUser] = useState({\r\n        firstName: '', \r\n        lastName: '', \r\n        jmbg: '', \r\n        address: '',\r\n        email: '', \r\n        position: '', \r\n        personalDeductions: '',\r\n        hourlyWage: '', \r\n        vacation: '',\r\n        role: ''\r\n    });\r\n\r\n    //Alert\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(undefined);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenAlert(false);\r\n    }\r\n\r\n    //Parametri\r\n    const params = useParams();\r\n\r\n    const submitMonthReport = async (event) => {\r\n        event.preventDefault();\r\n\r\n        getWorkingReport(params.userId, date.format('MM'), date.format('YYYY')).then(response => {\r\n            if(response.data.isEdit)\r\n                exportPDF(`${user.firstName} ${user.lastName}-${date.format('MMMM')}/${date.format('YYYY')}`, response.data.status, response.data.tableHeaders, response.data.statusJSON);\r\n\r\n            setOpenAlert(true);\r\n            setMessage(response.data.message);\r\n            setIsEdit(response.data.isEdit);\r\n            setDate(moment(\"01/01/2022\", \"DD/MM/YYYY\"));\r\n        });\r\n    }\r\n\r\n    const submitWholeReport = async (event) => {\r\n        event.preventDefault();\r\n\r\n        getWholeWorkingReport(params.userId).then(response => {\r\n            if(response.data.isEdit)\r\n                exportPDF(`${user.firstName} ${user.lastName}`, response.data.status, response.data.tableHeaders, response.data.statusJSON);\r\n\r\n            setOpenAlert(true);\r\n            setMessage(response.data.message);\r\n            setIsEdit(response.data.isEdit);\r\n            setDate(moment(\"01/01/2022\", \"DD/MM/YYYY\"));\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        getUserData(params).then((response) => {\r\n            if(isSubscribed) {\r\n                setUser(response.data.user);\r\n                setFirstLetter(JSON.stringify(response.data.user.firstName).charAt(1));\r\n            }\r\n        });\r\n\r\n        return () => isSubscribed = false;\r\n    }, [params]);\r\n\r\n    return (\r\n        <Box>\r\n            <Card>\r\n                <CardHeader \r\n                    avatar={\r\n                        <Avatar sx={{ bgcolor: blue[600] }} aria-label=\"recipe\">\r\n                            {firstLetter}\r\n                        </Avatar>\r\n                    }\r\n                    title={user.firstName + \" \" + user.lastName}\r\n                    subheader={user.position} \r\n                />\r\n                <Divider variant='middle'/>\r\n                <CardContent>   \r\n                    <LocalizationProvider dateAdapter={DateAdapter} locale={\"sr\"} >\r\n                        <Box>\r\n                            <Typography sx={{marginBottom: 1, marginTop: 1}}>Odaberite mjesec i godinu</Typography>\r\n                            <MobileDatePicker \r\n                                minDate={moment(\"01/01/2022\", \"DD/MM/YYYY\")}\r\n                                maxDate={moment(new Date(), \"DD/MM/YYYY\")}\r\n                                views={['year', 'month']}\r\n                                toolbarTitle=\"Izaberite datum\"\r\n                                cancelText=\"Odustani\"\r\n                                inputFormat=\"DD/MM/YYYY\"\r\n                                value={date}\r\n                                mask=\"__/__/____\"\r\n                                onChange={(dateChanged) => {\r\n                                    return setDate(moment(dateChanged));\r\n                                }}\r\n                                renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                            />\r\n                        </Box>\r\n                    </LocalizationProvider>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Stack direction=\"column\" spacing={1} sx={{width: \"100%\"}}>\r\n                        <Button variant='contained' color='primary' fullWidth={true} onClick={submitMonthReport}>\r\n                            Generiši izvještaj za odabrani mjesec\r\n                        </Button>\r\n                        <Button variant='contained' color='primary' fullWidth={true} onClick={submitWholeReport}>\r\n                            Generiši ukupni izvještaj za zaposlenika\r\n                        </Button>\r\n                    </Stack>\r\n                </CardActions>\r\n            </Card>\r\n            { isEdit ? (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"success\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            ) : (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"error\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            )}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default UserWorkingHoursReport;","import axios from \"axios\";\r\n\r\nconst calculateSallary = async (dateFrom, dateTo) => {\r\n    try {\r\n        return await axios.post('https://tarik-diplomski.herokuapp.com/api/sallary/calculateSallary', {dateFrom: dateFrom, dateTo: dateTo});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getSallaryRange = async () => {\r\n    try {\r\n        return await axios.get('https://tarik-diplomski.herokuapp.com/api/sallary/sallaryReportRange');\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getSallaryRangeReport = async (_id) => {\r\n    try {\r\n        return await axios.get(`https://tarik-diplomski.herokuapp.com/api/sallary/getSallaryRangeReport/${_id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getUserSallaryRangeReport = async(_id) => {\r\n    try {\r\n        return await axios.get(`https://tarik-diplomski.herokuapp.com/api/sallary/getAllSallaryRangeReport/${_id}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getAllSallaryReport = async () => {\r\n    try {\r\n        return await axios.get(`https://tarik-diplomski.herokuapp.com/api/sallary/getAllSallaryReport`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getUserAllSallaryReport = async () => {\r\n    try {\r\n        return await axios.get(`https://tarik-diplomski.herokuapp.com/api/sallary/getUserAllSallaryReport`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { calculateSallary, getSallaryRange, getSallaryRangeReport, getAllSallaryReport, getUserSallaryRangeReport, getUserAllSallaryReport };","import { useState } from 'react';\r\nimport { Box, Card, CardContent, CardActions, TextField, Typography, Button, Stack, Snackbar, Alert, CardHeader, Avatar, Divider, IconButton } from \"@mui/material\";\r\nimport { MobileDatePicker, LocalizationProvider } from \"@mui/lab\";\r\nimport { blue } from '@mui/material/colors';\r\nimport DateAdapter from '@mui/lab/AdapterMoment'\r\nimport moment from \"moment\";\r\nimport \"moment/locale/sr\";\r\n\r\n//Icons\r\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\r\n\r\n//API\r\nimport { calculateSallary } from '../../api/APISallary';\r\n\r\nconst Sallary = () => {\r\n    const [dateFrom, setDateFrom] = useState(moment(new Date(), \"DD/MM/YYYY\"));\r\n    const [dateTo, setDateTo] = useState(moment(new Date(), \"DD/MM/YYYY\"));\r\n\r\n    //Alerti\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(undefined);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const submitCalculateSallary = async (event) => {\r\n        event.preventDefault();\r\n\r\n        calculateSallary(dateFrom, dateTo).then(response => {\r\n            setOpenAlert(true);\r\n            setIsEdit(response.data.isEdit);\r\n            setMessage(response.data.message);\r\n            setDateFrom(moment(new Date(), \"DD/MM/YYYY\"));\r\n            setDateTo(moment(new Date(), \"DD/MM/YYYY\"));\r\n        });\r\n    }\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenAlert(false);\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Card>\r\n                <CardHeader \r\n                    avatar={\r\n                        <Avatar sx={{ bgcolor: blue[600] }} aria-label=\"recipe\">\r\n                            <IconButton>\r\n                                <AttachMoneyIcon />\r\n                            </IconButton>\r\n                        </Avatar>\r\n                    }\r\n                    title={\"Plate\"}\r\n                    subheader={\"Obračun plate za određeni period\"} \r\n                />\r\n                <Divider variant='middle'/>\r\n                <CardContent>   \r\n                    <LocalizationProvider dateAdapter={DateAdapter} locale={\"sr\"} >\r\n                        <Box>\r\n                            <Typography sx={{marginBottom: 1, marginTop: 1}}>Odaberite početak obračuna</Typography>\r\n                            <MobileDatePicker \r\n                                minDate={moment(\"01/01/2022\", \"DD/MM/YYYY\")}\r\n                                toolbarTitle=\"Izaberite datum do\"\r\n                                cancelText=\"Odustani\"\r\n                                inputFormat=\"DD/MM/YYYY\"\r\n                                value={dateFrom}\r\n                                mask=\"__/__/____\"\r\n                                onChange={(dateChanged) => {\r\n                                    return setDateFrom(moment(dateChanged));\r\n                                }}\r\n                                renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                            />\r\n                        </Box>\r\n                        <Box>\r\n                            <Typography sx={{marginBottom: 1, marginTop: 1}}>Odaberite kraj obračuna</Typography>\r\n                            <MobileDatePicker \r\n                                minDate={moment(\"01/01/2022\", \"DD/MM/YYYY\")}\r\n                                toolbarTitle=\"Izaberite datum od\"\r\n                                cancelText=\"Odustani\"\r\n                                inputFormat=\"DD/MM/YYYY\"\r\n                                value={dateTo}\r\n                                mask=\"__/__/____\"\r\n                                onChange={(dateChanged) => {\r\n                                    return setDateTo(moment(dateChanged));\r\n                                }}\r\n                                renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                            />\r\n                        </Box>\r\n                    </LocalizationProvider>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Stack direction=\"column\" spacing={1} sx={{width: \"100%\"}}>\r\n                        <Button variant='contained' color='primary' fullWidth={true} onClick={submitCalculateSallary}>\r\n                            Obračunaj platu za unešeni period\r\n                        </Button>\r\n                    </Stack>\r\n                </CardActions>\r\n            </Card>\r\n            { isEdit ? (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"success\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            ) : (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"error\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            )}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Sallary;","import { useState, useEffect } from 'react';\r\nimport { Box, Toolbar, Typography, TextField, MenuItem, Button, Stack, Alert, Snackbar } from '@mui/material';\r\n\r\n//API\r\nimport { getSallaryRange, getSallaryRangeReport, getAllSallaryReport } from '../../api/APISallary';\r\n\r\n//PDF table \r\nimport { exportPDF } from '../../helpers/ExportToPDF';\r\n\r\nconst SallaryReport = () => {\r\n    const [sallaryRange, setSallaryRange] = useState([{_id: \"\", dateFrom: \"Nema obračuna\", dateTo: \"Nema obračuna\"}]);\r\n    const [sallaryRangeId, setSallaryRangeId] = useState(\"1\");\r\n\r\n    //Da li je editovan \r\n    const [message, setMessage] = useState(\"\");\r\n    const [isEdit, setIsEdit] = useState(undefined);\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        getSallaryRange().then((response) => {\r\n            if(isSubscribed) \r\n                setSallaryRange(response.data.calculation);\r\n        }); \r\n\r\n        return () => isSubscribed = false;\r\n    }, []);\r\n\r\n    const getSallary = async (event) => {\r\n        event.preventDefault();\r\n\r\n        getSallaryRangeReport(sallaryRangeId).then((response) => {\r\n            if(response.data.isEdit)\r\n                exportPDF(`Izvještaj plata za period ${response.data.sallaryRange}`, response.data.sallaryReport, response.data.tableHeaders, response.data.sallaryReportJSON);\r\n            setOpenAlert(true);\r\n            setMessage(response.data.message);\r\n            setIsEdit(response.data.isEdit);\r\n        });\r\n    }\r\n\r\n    const getAllSallary = async (event) => {\r\n        event.preventDefault();\r\n\r\n        getAllSallaryReport().then((response) => {\r\n            if(response.data.isEdit)\r\n                exportPDF(`Izvještaj plata`, response.data.sallaryReport, response.data.tableHeaders, response.data.sallaryReportJSON);\r\n            setOpenAlert(true);\r\n            setMessage(response.data.message);\r\n            setIsEdit(response.data.isEdit);\r\n        });\r\n    }\r\n\r\n    const updateField = (event) => {\r\n        setSallaryRangeId(event.target.value);\r\n    };\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenAlert(false);\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Toolbar sx={{pl: { sm: 2 }, pr: { xs: 1, sm: 1 }}}>\r\n                <Typography sx={{ flex: '1 1 100%' }} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    Izvještaj plate\r\n                </Typography>\r\n            </Toolbar>\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1\r\n                }}\r\n            >\r\n                <TextField \r\n                    name=\"period\" \r\n                    select \r\n                    value={sallaryRangeId}\r\n                    label=\"Period za obračun\" \r\n                    onChange={updateField} \r\n                    fullWidth\r\n                >\r\n                    {\r\n                        sallaryRange.map((value) => {\r\n                            if(value._id === \"1\") \r\n                                return (\r\n                                    <MenuItem key=\"none\" value={value._id}>\r\n                                        {value.dateFrom}\r\n                                    </MenuItem>\r\n                                )\r\n                            else \r\n                                return (\r\n                                    <MenuItem key={value._id} value={value._id}>\r\n                                        {new Date(value.dateFrom).getDate() + \"/\" + (new Date(value.dateFrom).getMonth() + 1) + \"/\" + new Date(value.dateFrom).getFullYear() + \"-\" +\r\n                                        new Date(value.dateTo).getDate() + \"/\" + (new Date(value.dateTo).getMonth() + 1) + \"/\" + new Date(value.dateTo).getFullYear()}\r\n                                    </MenuItem>\r\n                                )\r\n                        })\r\n                    }\r\n                </TextField>\r\n            </Box>\r\n            <Box sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1\r\n                }}\r\n            >\r\n                <Button \r\n                    sx={{height: 55, marginTop: 2}} \r\n                    type=\"button\" \r\n                    color=\"info\" \r\n                    fullWidth \r\n                    variant=\"contained\" \r\n                    onClick={getSallary}\r\n                 >   \r\n                    Generiši izvještaj za određeni mjesec\r\n                </Button>\r\n            </Box>\r\n            <Box sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1\r\n                }}\r\n            >\r\n                <Button \r\n                    sx={{height: 55, marginTop: 2}} \r\n                    type=\"button\" \r\n                    color=\"info\" \r\n                    fullWidth \r\n                    variant=\"contained\" \r\n                    onClick={getAllSallary}\r\n                 >   \r\n                    Generiši izvještaj za čitav period\r\n                </Button>\r\n            </Box>\r\n            { isEdit ? (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"success\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            ) : (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"error\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            )}\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default SallaryReport;","import { useState, useEffect } from 'react';\r\nimport { Box, Toolbar, Typography, TextField, MenuItem, Button, Stack, Alert, Snackbar } from '@mui/material';\r\n\r\n//API\r\nimport { getSallaryRange, getUserSallaryRangeReport, getUserAllSallaryReport } from '../../api/APISallary';\r\n\r\n//PDF table \r\nimport { exportPDF } from '../../helpers/ExportToPDF';\r\n\r\nconst UserSallaryReport = () => {\r\n    const [sallaryRange, setSallaryRange] = useState([{_id: \"\", dateFrom: \"Nema obračuna\", dateTo: \"Nema obračuna\"}]);\r\n    const [sallaryRangeId, setSallaryRangeId] = useState(\"1\");\r\n\r\n    //Da li je editovan \r\n    const [message, setMessage] = useState(\"\");\r\n    const [isEdit, setIsEdit] = useState(undefined);\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        getSallaryRange().then((response) => {\r\n            if(isSubscribed) \r\n                setSallaryRange(response.data.calculation);\r\n        }); \r\n\r\n        return () => isSubscribed = false;\r\n    }, []);\r\n\r\n    const getUserSallary = async (event) => {\r\n        event.preventDefault();\r\n\r\n        getUserSallaryRangeReport(sallaryRangeId).then((response) => {\r\n            if(response.data.isEdit)\r\n                exportPDF(`Izvještaj plata za period ${response.data.sallaryRange}`, response.data.sallaryReport, response.data.tableHeaders, response.data.sallaryReportJSON);\r\n            setOpenAlert(true);\r\n            setMessage(response.data.message);\r\n            setIsEdit(response.data.isEdit);\r\n        });\r\n    }\r\n\r\n    const getUserAllSallary = async (event) => {\r\n        event.preventDefault();\r\n\r\n        getUserAllSallaryReport().then((response) => {\r\n            if(response.data.isEdit)\r\n                exportPDF(`Izvještaj plata`, response.data.sallaryReport, response.data.tableHeaders, response.data.sallaryReportJSON);\r\n            setOpenAlert(true);\r\n            setMessage(response.data.message);\r\n            setIsEdit(response.data.isEdit);\r\n        });\r\n    }\r\n\r\n    const updateField = (event) => {\r\n        setSallaryRangeId(event.target.value);\r\n    };\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenAlert(false);\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Toolbar sx={{pl: { sm: 2 }, pr: { xs: 1, sm: 1 }}}>\r\n                <Typography sx={{ flex: '1 1 100%' }} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    Izvještaj plate\r\n                </Typography>\r\n            </Toolbar>\r\n            <Box \r\n                sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1\r\n                }}\r\n            >\r\n                <TextField \r\n                    name=\"period\" \r\n                    select \r\n                    value={sallaryRangeId}\r\n                    label=\"Period za obračun\" \r\n                    onChange={updateField} \r\n                    fullWidth\r\n                >\r\n                    {\r\n                        sallaryRange.map((value) => {\r\n                            if(value._id === \"1\") \r\n                                return (\r\n                                    <MenuItem key=\"none\" value={value._id}>\r\n                                        {value.dateFrom}\r\n                                    </MenuItem>\r\n                                )\r\n                            else \r\n                                return (\r\n                                    <MenuItem key={value._id} value={value._id}>\r\n                                        {new Date(value.dateFrom).getDate() + \"/\" + (new Date(value.dateFrom).getMonth() + 1) + \"/\" + new Date(value.dateFrom).getFullYear() + \"-\" +\r\n                                        new Date(value.dateTo).getDate() + \"/\" + (new Date(value.dateTo).getMonth() + 1) + \"/\" + new Date(value.dateTo).getFullYear()}\r\n                                    </MenuItem>\r\n                                )\r\n                        })\r\n                    }\r\n                </TextField>\r\n            </Box>\r\n            <Box sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1\r\n                }}\r\n            >\r\n                <Button \r\n                    sx={{height: 55, marginTop: 2}} \r\n                    type=\"button\" \r\n                    color=\"info\" \r\n                    fullWidth \r\n                    variant=\"contained\" \r\n                    onClick={getUserSallary}\r\n                >   \r\n                    Generiši izvještaj za određeni mjesec\r\n                </Button>\r\n            </Box>\r\n            <Box sx={{\r\n                    width: '100%', \r\n                    paddingLeft: 1, \r\n                    paddingRight: 1\r\n                }}\r\n            >\r\n                <Button \r\n                    sx={{height: 55, marginTop: 2}} \r\n                    type=\"button\" \r\n                    color=\"info\" \r\n                    fullWidth \r\n                    variant=\"contained\" \r\n                    onClick={getUserAllSallary}\r\n                >   \r\n                    Generiši izvještaj za čitav period\r\n                </Button>\r\n            </Box>\r\n            { isEdit ? (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"success\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            ) : (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"error\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default UserSallaryReport;","import { useState, useEffect, useRef, useContext } from 'react';\r\nimport { Avatar, Box, Button, Card, CardActions, CardContent, CardHeader, Divider, TextField, Stack, Snackbar, Alert } from '@mui/material';\r\nimport { blue } from '@mui/material/colors';\r\n\r\n//Context\r\nimport AuthContext from '../../context/AuthContext';\r\n\r\n//Api\r\nimport { getYourWorkingHours } from '../../api/APIUsers';\r\nimport { checkIn, isCheckIn } from '../../api/APIStatusRecord';\r\n\r\nconst UserCheckInForm = () => {\r\n    const { flagCheckIn, setFlagCheckIn } = useContext(AuthContext);\r\n\r\n    const today = useRef(new Date());\r\n    const status = useRef('Radio');\r\n\r\n    const [firstLetter, setFirstLetter] = useState(\"\");\r\n    const [user, setUser] = useState({\r\n        _id: \"\", \r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        workingHourFrom: \"\",\r\n        workingHourTo: \"\",\r\n        position: \"\"\r\n    });\r\n\r\n    const [message, setMessage] = useState('');\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n    //const [flagCheckIn, setFlagCheckIn] = useState(false);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const userCheckIn = {status: status, date: today};\r\n\r\n        checkIn(userCheckIn).then(response => {\r\n            setMessage(response.data.message);\r\n            setIsSuccess(true);\r\n            isCheckIn().then((response) => {\r\n                setFlagCheckIn(response.data.flagCheckIn);\r\n            });\r\n        });\r\n    }\r\n\r\n    const handleCloseAlert = () => {\r\n        setIsSuccess(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        getYourWorkingHours().then((response) => {\r\n            if(isSubscribed) {\r\n                setUser(response.data.user);\r\n                setFirstLetter(JSON.stringify(response.data.user.firstName).charAt(1));\r\n            }\r\n        });\r\n\r\n        return () => isSubscribed = false;\r\n    }, []);\r\n\r\n    return (\r\n        <Box>\r\n            <Card>\r\n                <CardHeader \r\n                    avatar={\r\n                        <Avatar sx={{ bgcolor: blue[600] }} aria-label=\"recipe\">\r\n                            {firstLetter}\r\n                        </Avatar>\r\n                    }\r\n                    title={user.firstName + \" \" + user.lastName}\r\n                    subheader={user.position} \r\n                />\r\n                <Divider variant='middle'/>\r\n                <CardContent>   \r\n                    <TextField sx={{paddingBottom: 2}} disabled fullWidth label=\"Datum\" variant=\"standard\" value={today.current.getDate()+\"/\"+(today.current.getMonth()+1)+\"/\"+today.current.getFullYear()} />\r\n                    <TextField sx={{paddingBottom: 2}} disabled fullWidth label=\"Radno vrijeme od\" variant=\"standard\" value={user.workingHourFrom} />\r\n                    <TextField sx={{paddingBottom: 2}} disabled fullWidth label=\"Radno vrijeme do\" variant=\"standard\" value={user.workingHourTo} /> \r\n                </CardContent>\r\n                <CardActions>\r\n                    { today.current.getDay() === 0 || today.current.getDay() === 6 || flagCheckIn ? (\r\n                        <Button variant='contained' color='primary' disabled fullWidth={true} >\r\n                            Zabranjen unos!\r\n                        </Button>\r\n                    ) : (\r\n                        <Button variant='contained' color='primary' fullWidth={true} onClick={handleSubmit}>\r\n                            Prijavi se\r\n                        </Button>\r\n                    )}\r\n                </CardActions>\r\n            </Card>\r\n            {isSuccess === true && (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={isSuccess} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"success\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            )}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default UserCheckInForm;","const STATUSRECORD = Object.freeze ({\r\n    WORK: 'Radio',\r\n    VACATION: 'Odmor',\r\n    SICKLEAVE: 'Bolovanje',\r\n    BUSINESSVISIT: 'Službeni put',\r\n    PAIDINDEMNITY: 'Plaćeno odsustvo',\r\n    NOPAIDINDEMNITY: 'Neplaćeno odsustvo'\r\n});\r\n\r\nexport { STATUSRECORD };","import { useState, useEffect } from 'react';\r\nimport { Accordion, AccordionSummary, AccordionDetails, Typography, Card, CardContent, CardActions, TextField, Button, Box, Alert, Snackbar, Stack } from '@mui/material';\r\nimport { MobileDatePicker, LocalizationProvider } from \"@mui/lab\";\r\nimport DateAdapter from '@mui/lab/AdapterMoment'\r\nimport moment from \"moment\";\r\nimport \"moment/locale/sr\";\r\n\r\n//Icons\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\n//API\r\nimport { setHolidays, setOtherStatus, getHolidayDayLeft } from '../../api/APIStatusRecord';\r\n\r\n//Constants\r\nimport { STATUSRECORD } from '../../constants/EmployeeStatusRecordConstants';\r\n\r\nconst OtherStatus = () => {\r\n    const [dateFrom, setDateFrom] = useState(moment());\r\n    const [dateTo, setDateTo] = useState(moment());\r\n    const [vacationDay, setVacationDay] = useState(0);\r\n    const [vacationDayLeft, setVacationDayLeft] = useState(0);\r\n\r\n    //Alerti\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(undefined);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const submitVacation = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setHolidays(dateFrom, dateTo, vacationDayLeft).then(response => {\r\n            if(response.data.isEdit)\r\n                setVacationDayLeft(response.data.vacationDayLeft);\r\n            \r\n            setOpenAlert(true);\r\n            setIsEdit(response.data.isEdit);\r\n            setMessage(response.data.message);\r\n            setDateFrom(moment());\r\n            setDateTo(moment());\r\n        });\r\n    }\r\n\r\n    const submitOtherStatus = async (event, status) => {\r\n        event.preventDefault();\r\n\r\n        setOtherStatus(dateFrom, dateTo, status).then(response => {\r\n            setOpenAlert(true);\r\n            setIsEdit(response.data.isEdit);\r\n            setMessage(response.data.message);\r\n            setDateFrom(moment());\r\n            setDateTo(moment());\r\n        });\r\n    }\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenAlert(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        getHolidayDayLeft().then(response => {\r\n            if(isSubscribed) {\r\n                setVacationDay(response.data.vacationDay);\r\n                setVacationDayLeft(response.data.vacationDayLeft);\r\n            }\r\n        });\r\n\r\n        return () => isSubscribed = false;\r\n    }, []);\r\n\r\n    return (\r\n        <Box>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography>{STATUSRECORD.VACATION}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <TextField sx={{paddingBottom: 2}} disabled fullWidth label=\"Ukupan broj dana godišnjeg\" variant=\"standard\" value={vacationDay}/>\r\n                            <TextField sx={{paddingBottom: 2}} disabled fullWidth label=\"Preostali broj dana godišnjeg\" variant=\"standard\" value={vacationDayLeft}/>\r\n                            <LocalizationProvider dateAdapter={DateAdapter} locale={\"sr\"} >\r\n                                <Box>\r\n                                    <Typography sx={{marginBottom: 1, marginTop: 1}}>Datum od</Typography>\r\n                                    <MobileDatePicker\r\n                                        disablePast\r\n                                        toolbarTitle=\"Izaberite datum\"\r\n                                        cancelText=\"Odustani\"\r\n                                        inputFormat=\"DD/MM/YYYY\"\r\n                                        value={dateFrom}\r\n                                        mask=\"__/__/____\"\r\n                                        onChange={(dateChanged) => {\r\n                                            return setDateFrom(moment(dateChanged));\r\n                                        }}\r\n                                        renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                                    />\r\n                                </Box>\r\n                                <Box>\r\n                                    <Typography sx={{marginBottom: 1, marginTop: 1}}>Datum do</Typography>\r\n                                    <MobileDatePicker\r\n                                        disablePast\r\n                                        toolbarTitle=\"Izaberite datum\"\r\n                                        cancelText=\"Odustani\"\r\n                                        inputFormat=\"DD/MM/YYYY\"\r\n                                        value={dateTo}\r\n                                        mask=\"__/__/____\"\r\n                                        onChange={(dateChanged) => {\r\n                                            return setDateTo(moment(dateChanged));\r\n                                        }}\r\n                                        renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                                    />\r\n                                </Box>\r\n                            </LocalizationProvider>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Button variant='contained' color='primary' fullWidth={true} onClick={submitVacation}>\r\n                                Zapiši godišnji    \r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel2a-content\"\r\n                    id=\"panel2a-header\"\r\n                >\r\n                    <Typography>{STATUSRECORD.SICKLEAVE}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <LocalizationProvider dateAdapter={DateAdapter} locale={\"sr\"} >\r\n                                <Box>\r\n                                    <Typography sx={{marginBottom: 1, marginTop: 1}}>Datum od</Typography>\r\n                                    <MobileDatePicker\r\n                                        disablePast\r\n                                        toolbarTitle=\"Izaberite datum\"\r\n                                        cancelText=\"Odustani\"\r\n                                        inputFormat=\"DD/MM/YYYY\"\r\n                                        value={dateFrom}\r\n                                        mask=\"__/__/____\"\r\n                                        onChange={(dateChanged) => {\r\n                                            return setDateFrom(moment(dateChanged));\r\n                                        }}\r\n                                        renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                                    />\r\n                                </Box>\r\n                                <Box>\r\n                                    <Typography sx={{marginBottom: 1, marginTop: 1}}>Datum do</Typography>\r\n                                    <MobileDatePicker\r\n                                        disablePast\r\n                                        toolbarTitle=\"Izaberite datum\"\r\n                                        cancelText=\"Odustani\"\r\n                                        inputFormat=\"DD/MM/YYYY\"\r\n                                        value={dateTo}\r\n                                        mask=\"__/__/____\"\r\n                                        onChange={(dateChanged) => {\r\n                                            return setDateTo(moment(dateChanged));\r\n                                        }}\r\n                                        renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                                    />\r\n                                </Box>\r\n                            </LocalizationProvider>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Button variant='contained' color='primary' fullWidth={true} onClick={(event) => { submitOtherStatus(event, STATUSRECORD.SICKLEAVE) }}>\r\n                                Zapiši bolovanje   \r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel3a-content\"\r\n                    id=\"panel3a-header\"\r\n                >\r\n                    <Typography>{STATUSRECORD.BUSINESSVISIT}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <LocalizationProvider dateAdapter={DateAdapter} locale={\"sr\"} >\r\n                            <Box>\r\n                                <Typography sx={{marginBottom: 1, marginTop: 1}}>Datum od</Typography>\r\n                                <MobileDatePicker\r\n                                    disablePast\r\n                                    toolbarTitle=\"Izaberite datum\"\r\n                                    cancelText=\"Odustani\"\r\n                                    inputFormat=\"DD/MM/YYYY\"\r\n                                    value={dateFrom}\r\n                                    mask=\"__/__/____\"\r\n                                    onChange={(dateChanged) => {\r\n                                        return setDateFrom(moment(dateChanged));\r\n                                    }}\r\n                                    renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                                />\r\n                            </Box>\r\n                            <Box>\r\n                                <Typography sx={{marginBottom: 1, marginTop: 1}}>Datum do</Typography>\r\n                                <MobileDatePicker\r\n                                    disablePast\r\n                                    toolbarTitle=\"Izaberite datum\"\r\n                                    cancelText=\"Odustani\"\r\n                                    inputFormat=\"DD/MM/YYYY\"\r\n                                    value={dateTo}\r\n                                    mask=\"__/__/____\"\r\n                                    onChange={(dateChanged) => {\r\n                                        return setDateTo(moment(dateChanged));\r\n                                    }}\r\n                                    renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                                />\r\n                            </Box>\r\n                        </LocalizationProvider>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Button variant='contained' color='primary' fullWidth={true} onClick={(event) => { submitOtherStatus(event, STATUSRECORD.BUSINESSVISIT) }}>\r\n                                Zapiši službeni put   \r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel3a-content\"\r\n                    id=\"panel3a-header\"\r\n                >\r\n                    <Typography>{STATUSRECORD.PAIDINDEMNITY}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <LocalizationProvider dateAdapter={DateAdapter} locale={\"sr\"} >\r\n                            <Box>\r\n                                <Typography sx={{marginBottom: 1, marginTop: 1}}>Datum od</Typography>\r\n                                <MobileDatePicker\r\n                                    disablePast\r\n                                    toolbarTitle=\"Izaberite datum\"\r\n                                    cancelText=\"Odustani\"\r\n                                    inputFormat=\"DD/MM/YYYY\"\r\n                                    value={dateFrom}\r\n                                    mask=\"__/__/____\"\r\n                                    onChange={(dateChanged) => {\r\n                                        return setDateFrom(moment(dateChanged));\r\n                                    }}\r\n                                    renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                                />\r\n                            </Box>\r\n                            <Box>\r\n                                <Typography sx={{marginBottom: 1, marginTop: 1}}>Datum do</Typography>\r\n                                <MobileDatePicker\r\n                                    disablePast\r\n                                    toolbarTitle=\"Izaberite datum\"\r\n                                    cancelText=\"Odustani\"\r\n                                    inputFormat=\"DD/MM/YYYY\"\r\n                                    value={dateTo}\r\n                                    mask=\"__/__/____\"\r\n                                    onChange={(dateChanged) => {\r\n                                        return setDateTo(moment(dateChanged));\r\n                                    }}\r\n                                    renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                                />\r\n                            </Box>\r\n                        </LocalizationProvider>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Button variant='contained' color='primary' fullWidth={true} onClick={(event) => { submitOtherStatus(event, STATUSRECORD.PAIDINDEMNITY) }} >\r\n                                Zapiši plaćeno odsustvo  \r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel3a-content\"\r\n                    id=\"panel3a-header\"\r\n                >\r\n                    <Typography>{STATUSRECORD.NOPAIDINDEMNITY}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <LocalizationProvider dateAdapter={DateAdapter} locale={\"sr\"} >\r\n                            <Box>\r\n                                <Typography sx={{marginBottom: 1, marginTop: 1}}>Datum od</Typography>\r\n                                <MobileDatePicker\r\n                                    disablePast\r\n                                    toolbarTitle=\"Izaberite datum\"\r\n                                    cancelText=\"Odustani\"\r\n                                    inputFormat=\"DD/MM/YYYY\"\r\n                                    value={dateFrom}\r\n                                    mask=\"__/__/____\"\r\n                                    onChange={(dateChanged) => {\r\n                                        return setDateFrom(moment(dateChanged));\r\n                                    }}\r\n                                    renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                                />\r\n                            </Box>\r\n                            <Box>\r\n                                <Typography sx={{marginBottom: 1, marginTop: 1}}>Datum do</Typography>\r\n                                <MobileDatePicker\r\n                                    disablePast\r\n                                    toolbarTitle=\"Izaberite datum\"\r\n                                    cancelText=\"Odustani\"\r\n                                    inputFormat=\"DD/MM/YYYY\"\r\n                                    value={dateTo}\r\n                                    mask=\"__/__/____\"\r\n                                    onChange={(dateChanged) => {\r\n                                        return setDateTo(moment(dateChanged));\r\n                                    }}\r\n                                    renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                                />\r\n                            </Box>\r\n                        </LocalizationProvider>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Button variant='contained' color='primary' fullWidth={true} onClick={(event) => { submitOtherStatus(event, STATUSRECORD.NOPAIDINDEMNITY) }}>\r\n                                Zapiši neplaćeno odsustvo   \r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            { isEdit ? (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"success\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            ) : (\r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"error\">\r\n                            {message}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            )}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default OtherStatus;","import { useState } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { Box, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, TextareaAutosize, TextField, Typography, Button,\r\n         Stack, Snackbar, Alert} from \"@mui/material\";\r\nimport { MobileDatePicker, LocalizationProvider } from \"@mui/lab\";\r\nimport DateAdapter from '@mui/lab/AdapterMoment'\r\nimport moment from \"moment\";\r\nimport \"moment/locale/sr\";\r\n\r\n//Api\r\nimport { createEmployeeStatus } from \"../../api/APIEmployeeStatus\";\r\n\r\nconst EmployeeStatusForm = () => {\r\n    const [date, setDate] = useState(moment());\r\n    const [description, setDescription] = useState(\"\");\r\n    const [status, setStatus] = useState(\"Radi\");\r\n\r\n    const params = useParams();\r\n\r\n    //Da li je ažuriran status\r\n    const [isEdit, setIsEdit] = useState(undefined);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setIsEdit(undefined);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setStatus(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const employeeStatus = { status: status, dateStatusChange: date.toString(), description: description };\r\n        \r\n        createEmployeeStatus(params, employeeStatus).then((response) => {\r\n            if(response.data.isEdit === true) {\r\n                setDate(moment());\r\n                setDescription(\"\");\r\n                setStatus(\"Radi\");\r\n            }\r\n            \r\n            setMessage(response.data.message);\r\n            setIsEdit(response.data.isEdit);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Box sx={{width: '100%'}}> \r\n            <FormControl>\r\n                <FormLabel id=\"employeeStatus\">Status zaposlenika</FormLabel>\r\n                <RadioGroup row value={status} onChange={handleChange}> \r\n                    <FormControlLabel value=\"Radi\" control={<Radio />} label=\"Radi\" />\r\n                    <FormControlLabel value=\"Ne radi\" control={<Radio />} label=\"Ne radi\" />\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <LocalizationProvider dateAdapter={DateAdapter} locale={\"sr\"} >\r\n                <Box>\r\n                    <Typography sx={{marginBottom: 1, marginTop: 1}}>Datum promjene statusa zaposlenika</Typography>\r\n                    <MobileDatePicker\r\n                        toolbarTitle=\"Izaberite datum\"\r\n                        cancelText=\"Odustani\"\r\n                        inputFormat=\"DD/MM/YYYY\"\r\n                        value={date}\r\n                        mask=\"__/__/____\"\r\n                        onChange={(dateChanged) => {\r\n                            return setDate(moment(dateChanged));\r\n                        }}\r\n                        renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                    />\r\n                </Box>\r\n            </LocalizationProvider>\r\n            <TextareaAutosize\r\n                aria-label=\"minimum height\"\r\n                placeholder=\"Napomena...\"\r\n                value={description}\r\n                onChange={(description) => {\r\n                    return setDescription(description.target.value)\r\n                }}\r\n                style={{ maxWidth: '100%', marginTop: 20 , minWidth: '100%', minHeight: '300px', maxHeight: '300px'}}\r\n            />\r\n            <Box sx={{marginTop: 1}}>\r\n                <Button onClick={handleSubmit} type=\"submit\" color=\"primary\"  variant=\"contained\" fullWidth>\r\n                    Dodaj\r\n                </Button>\r\n            </Box>\r\n            { isEdit === true && (\r\n                    <Stack sx={{ width: '100%' }} spacing={2}>\r\n                        <Snackbar open={true} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                            <Alert variant=\"filled\" severity=\"success\">\r\n                                {message}\r\n                            </Alert>\r\n                        </Snackbar>\r\n                    </Stack>\r\n                )\r\n            } \r\n            { isEdit === false && (\r\n                    <Stack sx={{ width: '100%' }} spacing={2}>\r\n                        <Snackbar open={true} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                            <Alert variant=\"filled\" severity=\"error\">\r\n                                {message}\r\n                            </Alert>\r\n                        </Snackbar>\r\n                    </Stack>\r\n                )\r\n            }\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default EmployeeStatusForm;\r\n","import { Dialog , DialogTitle , DialogContent , DialogContentText , DialogActions , Button } from '@mui/material';\r\n\r\nimport { deleteEmployeeStatus } from '../../../api/APIEmployeeStatus';\r\n\r\nconst DeleteEmployeeStatusModal = (props) => {\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        deleteEmployeeStatus(props._id).then((response) => {\r\n            props.handleCloseModal(response.data.message);\r\n        });\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.handleCloseModal(\"\");\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.openModal} onClose={handleClose}>\r\n            <DialogTitle>Brisanje statusa</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Da li ste sigurni da želite obrisati status!\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color='error'>Odustani</Button>\r\n                <Button onClick={handleSubmit}>Obriši</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default DeleteEmployeeStatusModal;","import { useEffect, useState } from 'react';\r\nimport { Box, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Toolbar, Typography, Button, Stack, TablePagination, Snackbar, Alert } from '@mui/material';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\n//Icons\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport ModeEditOutlineOutlinedIcon from '@mui/icons-material/ModeEditOutlineOutlined';\r\n\r\n//API\r\nimport { getEmployeeStatus } from '../../api/APIEmployeeStatus';\r\n\r\n//Components\r\nimport DeleteEmployeeStatusModal from './Modals/DeleteEmployeeStatusModal';\r\n\r\n\r\nconst EmployeeStatusTable = () => {\r\n    //Statusi korisnika\r\n    const [employeeStatus, setEmployeeStatus] = useState([]);\r\n\r\n    const params = useParams();\r\n\r\n    //Status id\r\n    const [statusId, setStatusId] = useState('');\r\n    const [idOfDeletedStatus, setIdOfDeletedStatus] = useState(-1);\r\n\r\n    //Broj redova u tabeli po stranici\r\n    const [page, setPage] = useState(0);\r\n    const [rowLength, setRowLength] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    \r\n    //Da li je obrisan status\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [deleteEmployeeStatusMessage, setEmployeeStatusMessage] = useState(\"\");\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenAlert(false);\r\n    };\r\n\r\n    const handleOpenModal = (id, index) => {\r\n        setStatusId(id);\r\n        setIdOfDeletedStatus(index);\r\n        setOpenModal(true);\r\n    };\r\n\r\n    const handleCloseModal = (message) => {\r\n        if(message === \"\") {\r\n            setOpenAlert(false);\r\n            setIdOfDeletedStatus(-1);\r\n        }\r\n        else {\r\n            setOpenAlert(true);\r\n            setEmployeeStatusMessage(message);\r\n            employeeStatus.splice(idOfDeletedStatus, 1);\r\n        }\r\n        \r\n        setOpenModal(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        getEmployeeStatus(params).then((response) => {\r\n            if (isSubscribed) {\r\n                setEmployeeStatus(response.data.employeeStatus);\r\n                setRowLength(response.data.employeeStatus.length);\r\n            }\r\n        });\r\n\r\n        return () => isSubscribed = false;\r\n    }, [params]);\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Toolbar sx={{ pl: { sm: 2 }, pr: { xs: 1, sm: 1 } }}>\r\n                <Typography sx={{ flex: '1 1 100%' }} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    Statusi\r\n                </Typography>\r\n            </Toolbar>\r\n\r\n            <TableContainer>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"left\">ID</TableCell>\r\n                            <TableCell align=\"left\">Status</TableCell>\r\n                            <TableCell align=\"left\">Datum</TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            employeeStatus.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                <TableRow key={index} hover >\r\n                                    <TableCell align=\"left\">{index + 1}</TableCell>\r\n                                    <TableCell align=\"left\">{row.status}</TableCell>\r\n                                    <TableCell align=\"left\">{`${new Date(row.dateStatusChange).toLocaleDateString()}`}</TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <Stack direction=\"row\" spacing={1} sx={{ justifyContent: 'end' }}>\r\n                                            <Link to={`/editEmployeeStatus/${row._id}`} style={{ textDecoration: 'none' }}>\r\n                                                <Button variant=\"contained\" color=\"warning\" startIcon={<ModeEditOutlineOutlinedIcon />}>\r\n                                                    Promjeni\r\n                                                </Button>\r\n                                            </Link>\r\n                                            <Button variant=\"contained\" onClick={() => handleOpenModal(row._id, index)} color=\"error\" startIcon={<DeleteForeverIcon />}>\r\n                                                Izbriši\r\n                                            </Button>\r\n                                        </Stack>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                component=\"div\"\r\n                count={rowLength}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                rowsPerPage={rowsPerPage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                rowsPerPageOptions={[5, 10]}\r\n                labelRowsPerPage={'Broj redova: '}\r\n                labelDisplayedRows={() => {\r\n                    return `${rowLength === 0 ? 0 : page * rowsPerPage + 1} - ${rowLength < rowsPerPage ? rowLength : page * rowsPerPage + rowsPerPage} od ${rowLength}`;\r\n                }}\r\n            />\r\n            {  \r\n                <Stack sx={{ width: '100%' }} spacing={2}>\r\n                    <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                        <Alert variant=\"filled\" severity=\"success\">\r\n                            {deleteEmployeeStatusMessage}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Stack>\r\n            }\r\n            <DeleteEmployeeStatusModal \r\n                _id={statusId} \r\n                openModal={openModal} \r\n                handleCloseModal={handleCloseModal} \r\n            />\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default EmployeeStatusTable;","import { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { Box, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, TextareaAutosize, TextField, Typography, Button,\r\n         Stack, Snackbar, Alert} from \"@mui/material\";\r\nimport { MobileDatePicker, LocalizationProvider } from \"@mui/lab\";\r\nimport DateAdapter from '@mui/lab/AdapterMoment';\r\nimport moment from \"moment\";\r\nimport \"moment/locale/sr\";\r\n\r\n//Api\r\nimport { editEmployeeStatus, getStatusWithId } from \"../../api/APIEmployeeStatus\";\r\n\r\nconst EditEmployeeStatus = () => {\r\n    const [date, setDate] = useState(moment());\r\n    const [description, setDescription] = useState(\"\");\r\n    const [status, setStatus] = useState(\"Radi\");\r\n\r\n    const params = useParams();\r\n\r\n    //Da li je ažuriran status\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setIsEdit(false);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setStatus(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const employeeStatus = { status: status, dateStatusChange: date.toString(), description: description };\r\n        \r\n        editEmployeeStatus(params, employeeStatus).then((response) => {\r\n            setMessage(response.data.message);\r\n            setIsEdit(response.data.isEdit);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        getStatusWithId(params).then((response) => {\r\n            if(isSubscribed) {\r\n                setDate(moment(response.data.employeeStatus.dateStatusChange));\r\n                setDescription(response.data.employeeStatus.description);\r\n                setStatus(response.data.employeeStatus.status);\r\n            }\r\n        });\r\n\r\n        return () => isSubscribed = false;\r\n    }, [params]);\r\n\r\n    return (\r\n        <Box sx={{width: '100%'}}> \r\n            <FormControl>\r\n                <FormLabel id=\"employeeStatus\">Status zaposlenika</FormLabel>\r\n                <RadioGroup row value={status} onChange={handleChange}> \r\n                    <FormControlLabel value=\"Radi\" control={<Radio />} label=\"Radi\" />\r\n                    <FormControlLabel value=\"Ne radi\" control={<Radio />} label=\"Ne radi\" />\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <LocalizationProvider dateAdapter={DateAdapter} locale={\"sr\"} >\r\n                <Box>\r\n                    <Typography sx={{marginBottom: 1, marginTop: 1}}>Datum promjene statusa zaposlenika</Typography>\r\n                    <MobileDatePicker\r\n                        toolbarTitle=\"Izaberite datum\"\r\n                        cancelText=\"Odustani\"\r\n                        inputFormat=\"DD/MM/YYYY\"\r\n                        value={date}\r\n                        mask=\"__/__/____\"\r\n                        onChange={(dateChanged) => {\r\n                            return setDate(moment(dateChanged));\r\n                        }}\r\n                        renderInput={(params) => <TextField {...params} fullWidth/>}\r\n                    />\r\n                </Box>\r\n            </LocalizationProvider>\r\n            <TextareaAutosize\r\n                aria-label=\"minimum height\"\r\n                placeholder=\"Napomena...\"\r\n                value={description}\r\n                onChange={(description) => {\r\n                    return setDescription(description.target.value)\r\n                }}\r\n                style={{ maxWidth: '100%', marginTop: 20 , minWidth: '100%', minHeight: '300px', maxHeight: '300px'}}\r\n            />\r\n            <Box sx={{marginTop: 1}}>\r\n                <Button onClick={handleSubmit} type=\"submit\" color=\"primary\"  variant=\"contained\" fullWidth>\r\n                    Promjeni\r\n                </Button>\r\n            </Box>\r\n            <Stack sx={{ width: '100%' }} spacing={2}>\r\n                <Snackbar open={isEdit} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n                    <Alert variant=\"filled\" severity=\"success\">\r\n                        {message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Stack>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default EditEmployeeStatus;","import { useContext } from 'react'; \r\nimport { Navigate } from 'react-router-dom';\r\n\r\n//Constants\r\nimport { ROLES } from '../constants/AuthorizationConstants';\r\n\r\n//Context\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nfunction PrivateRoute({ children }) { \r\n    const { loggedIn } = useContext(AuthContext);\r\n\r\n    return loggedIn === true ? children : <Navigate to='/' />;\r\n}\r\n\r\nfunction PublicRoute({ children }) {\r\n    const { loggedIn } = useContext(AuthContext);\r\n\r\n    return loggedIn === false ? children : <Navigate to='/home' />; \r\n}\r\n\r\nfunction AdminRoute({ children }) {\r\n    const { loggedIn, authorization } = useContext(AuthContext);\r\n\r\n    if(loggedIn === true && authorization === ROLES.ADMINISTRATOR)\r\n        return children;\r\n    else if(loggedIn === true && authorization.a === false)\r\n        return <Navigate to='/home' />\r\n\r\n    return <Navigate to='/' />\r\n}\r\n\r\nfunction AccountantRoute({ children }) {\r\n    const { loggedIn, authorization } = useContext(AuthContext);\r\n\r\n    if(loggedIn === true && authorization === ROLES.ACCOUNTANT)\r\n        return children;\r\n    else if(loggedIn === true && authorization.a === false)\r\n        return <Navigate to='/home' />\r\n\r\n    return <Navigate to='/' />\r\n}\r\n\r\nfunction AdminAccountantRoute({ children }) {\r\n    const { loggedIn, authorization } = useContext(AuthContext);\r\n\r\n    if(loggedIn === true && (authorization === ROLES.ADMINISTRATOR || authorization === ROLES.ACCOUNTANT))\r\n        return children;\r\n    else if(loggedIn === true && authorization.a === false)\r\n        return <Navigate to='/home' />\r\n\r\n    return <Navigate to='/' />\r\n}\r\n\r\nexport { PublicRoute, PrivateRoute, AdminRoute, AccountantRoute, AdminAccountantRoute };","import { useContext, useState, useEffect } from 'react';\r\nimport { BrowserRouter, HashRouter, Route } from 'react-router-dom';\r\nimport { useMediaQuery, Box } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n//Screens\r\nimport Screen from '../components/Screen/Screen';\r\nimport Mobile from '../components/Screen/Mobile';\r\n\r\n//Pages\r\nimport Login from './Login';\r\n\r\n//Components\r\nimport SideDrawer from '../components/SideDrawer/SideDrawer';\r\nimport Navbar from '../components/Navbar';\r\n\r\n//Calendar\r\nimport ScreenCalendar from '../components/Calendar/Calendar';\r\n\r\n//User\r\nimport ViewYourProfile from '../components/User/ViewYourProfile';\r\nimport UsersTable from '../components/User/UsersTable';\r\nimport CreateUserForm from '../components/User/CreateUserForm';\r\nimport ViewProfile from '../components/User/ViewProfile';\r\nimport ViewProfileSallary from '../components/User/ViewProfileSallary';\r\nimport EditUserForm from '../components/User/EditUserForm';\r\nimport EditUserFormSallary from '../components/User/EditUserFormSallary';\r\n\r\n//EmployeesWorkingHours\r\nimport UsersWorkingHoursTable from '../components/UsersWorkingHours/UsersWorkingHoursTable';\r\nimport WorkingHoursReport from '../components/UsersWorkingHours/WorkingHoursReport';\r\nimport UserWorkingHoursReport from '../components/UsersWorkingHours/UserWorkingHoursReport';\r\n\r\n//Sallary\r\nimport Sallary from '../components/Sallary/Sallary';\r\nimport SallaryReport from '../components/Sallary/SallaryReport';\r\nimport UserSallaryReport from '../components/Sallary/UserSallaryReport';\r\n\r\n//UserCheckIn\r\nimport UserCheckInForm from '../components/UserCkeckIn/UserCheckInForm';\r\n\r\n//OtherStatus\r\nimport OtherStatus from '../components/OtherStatus/OtherStatus';\r\n\r\n//Status\r\nimport EmployeeStatusForm from '../components/EmployeeStatus/EmployeeStatusForm';\r\nimport EmployeeStatusTable from '../components/EmployeeStatus/EmployeeStatusTable';\r\nimport EditEmployeeStatus from '../components/EmployeeStatus/EditEmployeeStatus';\r\n\r\n//Context\r\nimport AuthContext from '../context/AuthContext';\r\n\r\n//Route access\r\nimport { PrivateRoute , PublicRoute, AdminRoute, AdminAccountantRoute, AccountantRoute } from '../helpers/AccessRoute';\r\n\r\nconst Router = () => {\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.down('md'));\r\n    \r\n    const [message, setMessage] = useState(\"\");\r\n    const [isLogOut, setIsLogOut] = useState(false);\r\n\r\n    const { loggedIn, getIsCheckIn, setFlagCheckIn } = useContext(AuthContext);\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const callBack = (message, isLogOut) => {\r\n        setMessage(message);\r\n        setIsLogOut(isLogOut);\r\n    }\r\n\r\n    const toggleSideDrawer = () => {\r\n        if(!open) {\r\n            setOpen(true);\r\n        }\r\n        else {\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n        if(loggedIn === true)\r\n            getIsCheckIn();\r\n        else \r\n            setFlagCheckIn(false);\r\n        if(isSubscribed) {\r\n            if(!matches) setOpen(true);\r\n            else setOpen(false);  \r\n        }\r\n        return () => isSubscribed = false;\r\n    }, [matches, getIsCheckIn, loggedIn, setFlagCheckIn]);\r\n\r\n    return (\r\n        <Box>\r\n            <BrowserRouter>\r\n                { loggedIn === true && (\r\n                    <Box>\r\n                        <SideDrawer open={open} setOpen={setOpen} />\r\n                        <Navbar toggleSideDrawer={toggleSideDrawer} open={open} callBack={callBack}/>\r\n                    </Box>\r\n                )}\r\n                <HashRouter>\r\n                    <Route path=\"/\" element={\r\n                        <PublicRoute>\r\n                            <Login message={message} isLogOut={isLogOut} setIsLogOut={setIsLogOut}/>\r\n                        </PublicRoute>\r\n                    } />\r\n                    <Route path=\"/home\" element={\r\n                        <PrivateRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <ScreenCalendar page={'Kalendar'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <ScreenCalendar page={'Kalendar'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </PrivateRoute>\r\n                    } />\r\n                    <Route path=\"/yourProfile\" element={\r\n                        <PrivateRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <ViewYourProfile page={'Profil'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <ViewYourProfile page={'Profil'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </PrivateRoute>\r\n                    } />\r\n                    <Route path=\"/userSallaryReport\" element={\r\n                        <PrivateRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <UserSallaryReport page={'Profil'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <UserSallaryReport page={'Profil'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </PrivateRoute>\r\n                    } />\r\n                    <Route path=\"/allUsers\" element={\r\n                        <AdminAccountantRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <UsersTable page={'Zaposlenici'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <UsersTable page={'Zaposlenici'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </AdminAccountantRoute>\r\n                    } />\r\n                    <Route path=\"/createUser\" element={\r\n                        <AdminRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <CreateUserForm page={'Dodaj korisnika'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <CreateUserForm page={'Dodaj korisnika'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </AdminRoute>\r\n                    } />\r\n                    <Route path=\"/profile/:userId\" element={\r\n                        <AdminRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <ViewProfile page={'Profil'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <ViewProfile page={'Profil'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </AdminRoute>\r\n                    } />\r\n                    <Route path=\"/editUser/:userId\" element={\r\n                        <AdminRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <EditUserForm page={'Promjeni korisnika'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <EditUserForm page={'Promjeni korisnika'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </AdminRoute>\r\n                    } />\r\n                    <Route path=\"/editUserSallary/:userId\" element={\r\n                        <AccountantRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <EditUserFormSallary page={'Promjeni korisnika'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <EditUserFormSallary page={'Promjeni korisnika'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </AccountantRoute>\r\n                    } />\r\n                    <Route path=\"/profileSallary/:userId\" element={\r\n                        <AccountantRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <ViewProfileSallary page={'Profil'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <ViewProfileSallary page={'Profil'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </AccountantRoute>\r\n                    } />\r\n                    <Route path=\"/calculateSallary\" element={\r\n                        <AccountantRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <Sallary page={'Obračun plata'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <Sallary page={'Obračun plata'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </AccountantRoute>\r\n                    } />\r\n                    <Route path=\"/createEmployeeStatus/:userId\" element={\r\n                        <AdminRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <EmployeeStatusForm page={'Dodaj status'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <EmployeeStatusForm page={'Dodaj status'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </AdminRoute>\r\n                    } />\r\n                    <Route path=\"/employeeStatus/:userId\" element={\r\n                        <AdminRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <EmployeeStatusTable page={'Statusi'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <EmployeeStatusTable page={'Statusi'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </AdminRoute>\r\n                    } />\r\n                    <Route path=\"/editEmployeeStatus/:statusId\" element={\r\n                        <AdminRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <EditEmployeeStatus page={'Promjeni status'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <EditEmployeeStatus page={'Promjeni status'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </AdminRoute>\r\n                    } />\r\n                    <Route path=\"/employeesWorkingHours\" element={\r\n                        <AdminAccountantRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <UsersWorkingHoursTable page={'Radno vrijeme'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <UsersWorkingHoursTable page={'Radno vrijeme'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </AdminAccountantRoute>\r\n                    } />\r\n                    <Route path=\"/sallaryReport\" element={\r\n                        <AdminAccountantRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <SallaryReport page={'Plate izvještaj'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <SallaryReport page={'Plate izvještaj'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </AdminAccountantRoute>\r\n                    } />\r\n                    <Route path='/workingReport' element={\r\n                        <AdminAccountantRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <WorkingHoursReport page={'Radno vrijeme izvještaji'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <WorkingHoursReport page={'Radno vrijeme izvještaji'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </AdminAccountantRoute>\r\n                    } />\r\n                    <Route path='/userWorkingHours/:userId' element={\r\n                        <AdminAccountantRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} >\r\n                                        <UserWorkingHoursReport page={'Radno vrijeme izvještaji'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} >\r\n                                        <UserWorkingHoursReport page={'Radno vrijeme izvještaji'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </AdminAccountantRoute>\r\n                    } />\r\n                    <Route path=\"/dailyCheckIn\" element={\r\n                        <PrivateRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open} page={'Prijava'} >\r\n                                        <UserCheckInForm page={'Prijava'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open} page={'Prijava'} >\r\n                                        <UserCheckInForm page={'Prijava'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </PrivateRoute>\r\n                    } />\r\n                    <Route path=\"/otherStatus\" element={\r\n                        <PrivateRoute>\r\n                            { matches ? (\r\n                                    <Mobile open={open}  page={'Ostali statusi'} >\r\n                                        <OtherStatus page={'Ostali statusi'} />\r\n                                    </Mobile>\r\n                                ) : (\r\n                                    <Screen open={open}  page={'Ostali statusi'} >\r\n                                        <OtherStatus page={'Ostali statusi'} />\r\n                                    </Screen>\r\n                                )\r\n                            }\r\n                        </PrivateRoute>\r\n                    } />\r\n                </HashRouter>\r\n            </BrowserRouter>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Router;","import axios from 'axios';\nimport './App.css'\n\n//Context\nimport { AuthContextProvider } from './context/AuthContext';\n\n//Main page\nimport Main from './pages/Main';\n\naxios.defaults.withCredentials = true;\n\nfunction App() {\n  return (\n    <AuthContextProvider authKey1={'iaAuth1'} authKey2={'isAuth2'} isCheckIn={'isCheckIn'}>\n      <Main />\n    </AuthContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}